<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on WinNote</title><link>https://winotmk.github.io/categories/python/</link><description>Recent content in Python on WinNote</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>winotmk</copyright><lastBuildDate>Sat, 10 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://winotmk.github.io/categories/python/index.xml" rel="self" type="application/rss+xml"/><item><title>python格式化字符串的方法</title><link>https://winotmk.github.io/posts/240810_python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Sat, 10 Aug 2024 00:00:00 +0000</pubDate><guid>https://winotmk.github.io/posts/240810_python%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>&lt;p>问题:
例如
&lt;code>print(&amp;quot;位置过期:%-6.0f秒&amp;quot;%cachetime)&lt;/code>的&lt;code>%-6.0f&lt;/code>是什么意思？
&lt;code>%-6.0f&lt;/code>里的每一个字符都是有意义的&lt;/p>
&lt;p>在 Python 中，%-6.0f 是一种格式化字符串的方法，用于格式化浮点数 cachetime 的值。让我们来逐部分解释：&lt;/p>
&lt;h2 id="解释">解释
&lt;/h2>&lt;h3 id="heading">%：
&lt;/h3>&lt;p>&lt;code>%&lt;/code> 是格式化操作符，用于将后面指定的变量格式化并插入到字符串中。&lt;/p>
&lt;h3 id="-6">-6：
&lt;/h3>&lt;p>&lt;code>-6&lt;/code> 是一个宽度说明符，它指定了格式化后输出的最小宽度为 6 个字符。
&lt;code>-&lt;/code> 表示左对齐。如果没有这个符号（即为默认的右对齐），数字会向右对齐。
如果数字宽度不足 6 个字符，则会在数字右侧补充空格，以达到 6 个字符的总宽度。&lt;/p>
&lt;h3 id="0">.0：
&lt;/h3>&lt;p>&lt;code>.0&lt;/code> 指定了浮点数的小数部分显示 0 位（即不显示小数部分）。因此，浮点数会被显示为整数形式。&lt;/p>
&lt;h3 id="f">f：
&lt;/h3>&lt;p>&lt;code>f&lt;/code> 表示将变量作为浮点数进行格式化。
ps:如果不用格式化字符串，直接&lt;code>print(cachetime)&lt;/code>会报错，因为不能直接打印浮点数，可以&lt;code>print(str(cachetime))&lt;/code>&lt;/p>
&lt;h2 id="例子">例子
&lt;/h2>&lt;p>假设 cachetime 的值是 820.75，则：&lt;/p>
&lt;pre>&lt;code class="language-python">cachetime = 820.75
formatted_string = u&amp;quot;位置过期:%-6.0f秒&amp;quot; % cachetime
print(formatted_string)
&lt;/code>&lt;/pre>
&lt;p>输出：&lt;/p>
&lt;pre>&lt;code class="language-makefile">位置过期:821 秒
&lt;/code>&lt;/pre>
&lt;h2 id="输出解释">输出解释：
&lt;/h2>&lt;p>&lt;code>%-6.0f&lt;/code> 将 &lt;code>820.75&lt;/code> 格式化为 &lt;code>821&lt;/code>（由于 .0 不显示小数部分）。
&lt;code>821&lt;/code> 左对齐，占用至少 6 个字符的位置。如果 &lt;code>821&lt;/code> 只有 3 个字符，右边会填充 3 个空格，使得总宽度为 6 个字符。
如果你将数字换成更小的，比如 10：&lt;/p>
&lt;pre>&lt;code class="language-python">cachetime = 10
formatted_string = u&amp;quot;位置过期:%-6.0f秒&amp;quot; % cachetime
print(formatted_string)
&lt;/code>&lt;/pre>
&lt;p>输出：&lt;/p>
&lt;pre>&lt;code class="language-makefile">位置过期:10 秒
&lt;/code>&lt;/pre>
&lt;p>10 会左对齐，后面会补充 4 个空格，使总长度达到 6 个字符。&lt;/p></description></item></channel></rss>