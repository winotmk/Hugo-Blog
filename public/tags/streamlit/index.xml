<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Streamlit on ExampleSite</title>
    <link>http://localhost:12371/tags/streamlit/</link>
    <description>Recent content in Streamlit on ExampleSite</description>
    <image>
      <title>ExampleSite</title>
      <url>http://localhost:12371/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:12371/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.144.2</generator>
    <language>en</language>
    <atom:link href="http://localhost:12371/tags/streamlit/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>用容器来运行streamlit</title>
      <link>http://localhost:12371/posts/240724_%E7%94%A8%E5%AE%B9%E5%99%A8%E6%9D%A5%E8%BF%90%E8%A1%8Cstreamlit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:12371/posts/240724_%E7%94%A8%E5%AE%B9%E5%99%A8%E6%9D%A5%E8%BF%90%E8%A1%8Cstreamlit/</guid>
      <description>&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/20240724152543.png&#34;&gt;
一开始玩这个的时候就在想用docker跑，因为实在不想在本机里搭各种乱七八糟的环境，也懒得用Anaconda那样的中间环境，总感觉本地跑个模型才用得上那种大玩意儿，于是在dockerhub上找了找
一些已有的可用镜像：
&lt;a href=&#34;https://hub.docker.com/r/aminehy/docker-streamlit-app&#34;&gt;https://hub.docker.com/r/aminehy/docker-streamlit-app&lt;/a&gt;
&lt;a href=&#34;https://hub.docker.com/r/samdobson/streamlit&#34;&gt;https://hub.docker.com/r/samdobson/streamlit&lt;/a&gt;
就是镜像build都好几年前了，实测目前有些新的例程都跑不了，还是自己做个镜像吧&lt;/p&gt;
&lt;h2 id=&#34;制作dockerfile&#34;&gt;制作dockerfile&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.streamlit.io/deploy/tutorials/docker&#34;&gt;https://docs.streamlit.io/deploy/tutorials/docker&lt;/a&gt;
好在官网已给出方案
这是我微改后的：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# app/Dockerfile

FROM python:3.9-slim

WORKDIR /app

RUN apt-get update &amp;amp;&amp;amp; apt-get install -y \
    build-essential \
    curl \
    software-properties-common \
    git \
    &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*

RUN git clone https://github.com/streamlit/streamlit-example.git .

RUN pip3 install -r requirements.txt

EXPOSE 8501

HEALTHCHECK CMD curl --fail http://localhost:8501/_stcore/health

CMD [&amp;#34;streamlit&amp;#34;, &amp;#34;run&amp;#34;, &amp;#34;main.py&amp;#34;, &amp;#34;--server.port=8501&amp;#34;, &amp;#34;--server.address=0.0.0.0&amp;#34;]
&lt;/code&gt;&lt;/pre&gt;&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;主要就最后一行并没有用&lt;code&gt;ENTRYPOINT&lt;/code&gt;，因为记得这个不是必须，用&lt;code&gt;CMD&lt;/code&gt;的好处是非常方便的就能修改&lt;code&gt;docker run&lt;/code&gt;时要运行的内容&lt;/p&gt;
&lt;h2 id=&#34;构建和使用镜像&#34;&gt;构建和使用镜像&lt;/h2&gt;
&lt;p&gt;打开CMD，CD到这个Dockerfile保存的目录下
&lt;code&gt;docker build -t streamlit_winotmk:latest . &lt;/code&gt;点不要落下&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
