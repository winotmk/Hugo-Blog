<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SVN on WinNote</title><link>https://winotmk.github.io/tags/svn/</link><description>Recent content in SVN on WinNote</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>winotmk</copyright><lastBuildDate>Thu, 14 Dec 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://winotmk.github.io/tags/svn/index.xml" rel="self" type="application/rss+xml"/><item><title>群晖上用容器搭建SVN服务器</title><link>https://winotmk.github.io/posts/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate><guid>https://winotmk.github.io/posts/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-24-37_b1d8f5bc.png" alt="Featured image of post 群晖上用容器搭建SVN服务器" />&lt;p>&lt;/p>
&lt;p>事先：我是用路由拨号所以家里已经有外网直连IP，且配置了DDNS和端口转发，所以一个域名即可连上NAS&lt;br>
另外我的群晖是DS720+，是块X86intel的CPU，所以和PC一样用X86的容器镜像就可以，如果是ARM机NAS应该是不通用的&lt;/p>
&lt;p>所用镜像：https://hub.docker.com/r/garethflowers/svn-server&lt;br>
备选镜像（看起来也很不错，拉取次数也过1M：https://hub.docker.com/r/elleflorio/svn-server&lt;/p>
&lt;p>SVN网站：https://subversion.apache.org/&lt;/p>
&lt;p>参考：&lt;br>
&lt;a class="link" href="https://blog.51cto.com/u_12701820/6544028" target="_blank" rel="noopener"
>https://blog.51cto.com/u_12701820/6544028&lt;/a>&lt;/p>
&lt;h2 id="准备镜像">准备镜像
&lt;/h2>&lt;p>&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-25-08_639c0ca7.png"
loading="lazy"
alt="2025-02-28-00-25-08"
>&lt;br>
由于在群晖的ContainerManager里直接添加镜像不能，应该是要配个docker的镜像站加速或者整个NAS在梯子环境里，懒得整了，我这次选择PC上保存镜像包再拖来NAS里用的形式，个人感觉更方便些&lt;/p>
&lt;p>先在PC上拉个镜像，直接&lt;/p>
&lt;pre>&lt;code>docker pull garethflowers/svn-server:latest
&lt;/code>&lt;/pre>
&lt;p>然后把镜像打包成文件&lt;/p>
&lt;pre>&lt;code>docker save -o svn-server.tar garethflowers/svn-server:latest
&lt;/code>&lt;/pre>
&lt;!-- more -->
&lt;p>就能得到一个&lt;code>svn-server.tar&lt;/code>的文件了，把这个文件上传到ContainerManager里&lt;br>
&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-25-38_13b3756a.png"
loading="lazy"
alt="2025-02-28-00-25-38"
>&lt;/p>
&lt;p>&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-25-46_4273e443.png"
loading="lazy"
alt="2025-02-28-00-25-46"
>&lt;/p>
&lt;p>然后左边的TAG里选容器》新增，选择刚上传的svn-server&lt;br>
&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-26-01_7194985a.png"
loading="lazy"
alt="2025-02-28-00-26-01"
>&lt;/p>
&lt;h2 id="配置镜像">配置镜像
&lt;/h2>&lt;p>&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-26-14_4d37cb36.png"
loading="lazy"
alt="2025-02-28-00-26-14"
>&lt;br>
镜像用法说明，基本上配置个端口和映射库就行&lt;br>
&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-26-23_899aa97e.png"
loading="lazy"
alt="2025-02-28-00-26-23"
>&lt;br>
&lt;code>/SVN_library/SVN_Folder&lt;/code>是我专门创建的新的NAS文件夹&lt;/p>
&lt;p>之后下一步容器就能启动起来了&lt;/p>
&lt;p>&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-26-33_ea608804.png"
loading="lazy"
alt="2025-02-28-00-26-33"
>&lt;br>
打开终端机》通过命令启动》用&lt;code>/bin/sh&lt;/code> 来开一个交互的shell&lt;br>
然后我输入&lt;/p>
&lt;pre>&lt;code>svnadmin create WinSVN
&lt;/code>&lt;/pre>
&lt;p>来建我的第一个SVN仓库名为&lt;code>WinSVN&lt;/code>&lt;/p>
&lt;p>（以下部分参考: &lt;a class="link" href="https://cloud.tencent.com/developer/article/1650131" target="_blank" rel="noopener"
>https://cloud.tencent.com/developer/article/1650131&lt;/a>&lt;/p>
&lt;p>然后找到&lt;code>/SVN_library/SVN_Folder/WinSVN/conf&lt;/code>，里面是SVN的配置文件了&lt;br>
&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-26-48_18f7ff0c.png"
loading="lazy"
alt="2025-02-28-00-26-48"
>&lt;br>
编辑&lt;code>svnserve.conf&lt;/code>&lt;br>
&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-26-57_620c4c5f.png"
loading="lazy"
alt="2025-02-28-00-26-57"
>&lt;/p>
&lt;p>anon-access = none #取消匿名访问&lt;br>
auth-access = write #授权用户有可写权限&lt;br>
password-db = passwd #指定用户配置文件，后面会用到&lt;/p>
&lt;p>编辑&lt;code>passwd&lt;/code>&lt;br>
&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-27-07_4751d042.png"
loading="lazy"
alt="2025-02-28-00-27-07"
>&lt;br>
添加了自己的账户，至于分区权限我暂时用不到&lt;/p>
&lt;p>记得重启容器，服务器部分好像就差不多了&lt;/p>
&lt;p>最后别忘记路由器上配个3690端口转发来远程访问这个仓库，我用的是ikuai的路由OS&lt;br>
&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-27-18_a3f37742.png"
loading="lazy"
alt="2025-02-28-00-27-18"
>&lt;/p>
&lt;h2 id="测试连接">测试连接
&lt;/h2>&lt;p>pc端新建个文件夹，右键SVN CheckOut&lt;br>
&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-27-27_806109de.png"
loading="lazy"
alt="2025-02-28-00-27-27"
>&lt;br>
地址可以输入&lt;code>svn://DDNS的域名:3690/WinSVN&lt;/code>，输入上面&lt;code>passwd&lt;/code>文件里设置好的用户名和密码就好了！！&lt;/p>
&lt;p>之后就是svn客户端的基本用法了，随便放一个文件尝试上传&lt;br>
&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-27-37_504ade86.png"
loading="lazy"
alt="2025-02-28-00-27-37"
>&lt;br>
很快就传好了，至此这个SVN仓库宣告可用！&lt;br>
&lt;img src="http://pictures.winotmk.com/%E7%BE%A4%E6%99%96%E4%B8%8A%E6%90%AD%E5%BB%BASVN%E6%9C%8D%E5%8A%A1%E5%99%A8/2025-02-28-00-27-44_56447933.png"
loading="lazy"
alt="2025-02-28-00-27-44"
>&lt;/p></description></item></channel></rss>