<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Hugo on WinNote</title>
        <link>http://localhost:12619/tags/hugo/</link>
        <description>Recent content in Hugo on WinNote</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>winotmk</copyright>
        <lastBuildDate>Mon, 24 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:12619/tags/hugo/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Hugo安装和启用Stack主题</title>
        <link>http://localhost:12619/posts/250224_hugo%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E7%94%A8%E4%B8%BB%E9%A2%98/</link>
        <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:12619/posts/250224_hugo%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E7%94%A8%E4%B8%BB%E9%A2%98/</guid>
        <description>&lt;h2 id=&#34;hugo安装与建立新网站&#34;&gt;Hugo安装与建立新网站
&lt;/h2&gt;&lt;h3 id=&#34;配置环境变量&#34;&gt;配置环境变量
&lt;/h3&gt;&lt;p&gt;在这里下载打包好的二进制文件，单文件很方便
&lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/gohugoio/hugo/releases&lt;/a&gt;
要注意的是Hugo发行版分3种，标准版，extended扩展版，和代deploy功能的extended扩展版
而Stack需要extended扩展版&lt;/p&gt;
&lt;p&gt;下好以后配置环境变量PATH到hugo单文件所在的目录，如果可以&lt;code&gt;hugo version&lt;/code&gt;即说明它可以工作啦！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://pictures.winotmk.com/250224_Hugo%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E7%94%A8%E4%B8%BB%E9%A2%98/2025-02-24-14-43-28_23d971d6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;2025-02-24-14-43-28&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;建立一个新站点和stack主题安装&#34;&gt;建立一个新站点和Stack主题安装
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/quick-start/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gohugo.io/getting-started/quick-start/&lt;/a&gt;
我是直接新建一个目录到里面打开CMD，然后&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new site .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就会在本地生成好网站目录
初始化git（因为需要用git子模块来拉主题的库）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后加载子模块&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git submodule add https://github.com/CaiJimmy/hugo-theme-stack/ themes/hugo-theme-stack
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;主题文档参见：
&lt;a class=&#34;link&#34; href=&#34;https://stack.jimmycai.com/guide/getting-started&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stack.jimmycai.com/guide/getting-started&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/themes/hugo-theme-stack/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://themes.gohugo.io/themes/hugo-theme-stack/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好了，主题的安装文档居然到这里戛然而止了，令人十分费解，前期工作完成后，最后一步启用居然没说，Stack主题发的文档似乎十分希望用户使用这个库来直接开始用主题和hugo：
&lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack-starter&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/CaiJimmy/hugo-theme-stack-starter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;但我偏不，我不喜欢预制用户用法的做法，我只是希望hugo作为一个生成器，部署要在阿里云OSS上做而不是github pages。&lt;/p&gt;
&lt;p&gt;所以摸索了大半天，自己安装的话应当将：
&lt;code&gt;themes\hugo-theme-stack\exampleSite&lt;/code&gt;目录下的&lt;code&gt;hugo.yaml&lt;/code&gt;文件复制到Hugo根目录并且删除原有的&lt;code&gt;hugo.toml&lt;/code&gt;设置文件,注意不是&lt;code&gt;themes\hugo-theme-stack&lt;/code&gt;里的&lt;code&gt;config.yaml&lt;/code&gt;
如果你想看自带的示例文章可以将&lt;code&gt;themes\hugo-theme-stack\exampleSite&lt;/code&gt;下的&lt;code&gt;content&lt;/code&gt;覆盖到根目录的同名目录里
之后就可以启动hugo预览了（不加-p参数默认端口为1313）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo server -D -p 7512
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开浏览器你将会看到：
&lt;img src=&#34;http://pictures.winotmk.com/250224_Hugo%E5%AE%89%E8%A3%85%E5%92%8C%E5%90%AF%E7%94%A8%E4%B8%BB%E9%A2%98/2025-02-24-15-06-17_426311aa.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;2025-02-24-15-06-17&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;恭喜你，开始为博客填内容吧~&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
