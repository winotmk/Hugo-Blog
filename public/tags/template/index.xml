<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Template on WinNote</title><link>https://winotmk.github.io/tags/template/</link><description>Recent content in Template on WinNote</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>winotmk</copyright><lastBuildDate>Wed, 26 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://winotmk.github.io/tags/template/index.xml" rel="self" type="application/rss+xml"/><item><title>Hugo模板简述</title><link>https://winotmk.github.io/posts/250226_hugo%E6%A8%A1%E6%9D%BF%E7%AE%80%E8%BF%B0/</link><pubDate>Wed, 26 Feb 2025 00:00:00 +0000</pubDate><guid>https://winotmk.github.io/posts/250226_hugo%E6%A8%A1%E6%9D%BF%E7%AE%80%E8%BF%B0/</guid><description>&lt;h3 id="语言构成解析">语言构成解析
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>基础语法&lt;/strong>&lt;br>
代码结构 &lt;code>{{ ... }}&lt;/code> 属于 Go 模板的标准语法：&lt;/p>
&lt;ul>
&lt;li>&lt;code>{{-&lt;/code> 表示删除左侧空白（包括换行符）&lt;/li>
&lt;li>&lt;code>-}}&lt;/code> 表示删除右侧空白&lt;/li>
&lt;li>逻辑控制：&lt;code>if&lt;/code>/&lt;code>else&lt;/code>/&lt;code>end&lt;/code>、&lt;code>range&lt;/code> 等&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>函数调用&lt;/strong>&lt;br>
&lt;code>or&lt;/code> 和 &lt;code>in&lt;/code> 是 Hugo 的内置函数：&lt;/p>
&lt;pre>&lt;code class="language-go">{{ in $alt &amp;quot;[no-render]&amp;quot; }} // 检查字符串包含关系
{{ or 条件1 条件2 }} // 逻辑&amp;quot;或&amp;quot;操作
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>上下文变量&lt;/strong>&lt;br>
&lt;code>$alt&lt;/code> 和 &lt;code>$title&lt;/code> 是 Hugo 在渲染图片时注入的上下文变量：&lt;/p>
&lt;ul>
&lt;li>&lt;code>.Destination&lt;/code> → 图片 URL&lt;/li>
&lt;li>&lt;code>.PlainText&lt;/code> → 图片的 alt 文本（不含 Markdown 格式）&lt;/li>
&lt;li>&lt;code>.Title&lt;/code> → 图片的 title 属性&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="文件类型解析">文件类型解析
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>文件载体&lt;/strong>&lt;br>
代码虽然写在 &lt;code>.html&lt;/code> 文件中，但实际包含三种语言层：&lt;/p>
&lt;pre>&lt;code class="language-html">&amp;lt;!-- 外层：HTML 静态标记 --&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;!-- 内层：Go 模板逻辑 --&amp;gt;
{{ if eq .Section &amp;quot;posts&amp;quot; }}
&amp;lt;!-- 深层：Hugo 扩展函数 --&amp;gt;
{{ partial &amp;quot;header.html&amp;quot; . }}
{{ end }}
&amp;lt;/div&amp;gt;
&lt;/code>&lt;/pre>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>处理阶段&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>阶段&lt;/th>
&lt;th>处理内容&lt;/th>
&lt;th>输出结果&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>模板编译&lt;/td>
&lt;td>执行 &lt;code>{{ ... }}&lt;/code> 内的逻辑&lt;/td>
&lt;td>动态生成 HTML 片段&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>客户端渲染&lt;/td>
&lt;td>浏览器解析最终 HTML&lt;/td>
&lt;td>用户可见的静态页面&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="技术定位">技术定位
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>模板引擎&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>基础&lt;/strong>：Go 标准库的 &lt;code>text/template&lt;/code> 和 &lt;code>html/template&lt;/code>&lt;/li>
&lt;li>&lt;strong>扩展&lt;/strong>：Hugo 增加了 100+ 自定义函数（通过 &lt;code>hugo::tpl&lt;/code> 包）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>领域特性&lt;/strong>&lt;/p>
&lt;pre>&lt;code class="language-go">// 典型的 Hugo 模板函数示例
{{ partialCached &amp;quot;footer.html&amp;quot; . .Section }} // 局部缓存
{{ $img := resources.Get &amp;quot;images/header.jpg&amp;quot; | fingerprint }} // 资源处理
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3 id="类比其他系统">类比其他系统
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>系统&lt;/th>
&lt;th>模板语言&lt;/th>
&lt;th>语法特征&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Hugo&lt;/strong>&lt;/td>
&lt;td>Go Template + Hugo 扩展&lt;/td>
&lt;td>&lt;code>{{ .Title }}&lt;/code>，&lt;code>{{ partial }}&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Jekyll&lt;/strong>&lt;/td>
&lt;td>Liquid&lt;/td>
&lt;td>&lt;code>{% if post.featured %}...{% endif %}&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Vue&lt;/strong>&lt;/td>
&lt;td>模板语法&lt;/td>
&lt;td>&lt;code>&amp;lt;div v-if=&amp;quot;show&amp;quot;&amp;gt;&lt;/code>，&lt;code>{{ message }}&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>React&lt;/strong>&lt;/td>
&lt;td>JSX&lt;/td>
&lt;td>&lt;code>{items.map(item =&amp;gt; &amp;lt;li&amp;gt;{item}&amp;lt;/li&amp;gt;)}&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="调试技巧">调试技巧
&lt;/h3>&lt;p>通过 Hugo 的调试方法输出变量值：&lt;/p>
&lt;pre>&lt;code class="language-html">{{/* 输出调试信息到控制台 */}}
{{- printf &amp;quot;%#v&amp;quot; .Title | warnf -}}
{{/* 在 HTML 中直接显示变量 */}}
&amp;lt;pre&amp;gt;{{ jsonify (dict &amp;quot;indent&amp;quot; &amp;quot; &amp;quot;) . }}&amp;lt;/pre&amp;gt;
&lt;/code>&lt;/pre></description></item></channel></rss>