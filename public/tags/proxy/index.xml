<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Proxy on WinNote</title>
        <link>http://localhost:4420/tags/proxy/</link>
        <description>Recent content in Proxy on WinNote</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>winotmk</copyright>
        <lastBuildDate>Tue, 09 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:4420/tags/proxy/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Linux上的命令行代理工具</title>
        <link>http://localhost:4420/posts/240109_linux%E4%B8%8A%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:4420/posts/240109_linux%E4%B8%8A%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;http://localhost:4420/images/20240109144331.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;阿里云的AI白票试用还是很香的，b站顺便一搜有很多教程，跑个lora训练或者SD webui之类的
但难免会遇到要拉更新之类的情况，github和huggingface.co速度慢或者连不上去也经常遇到，除了使用镜像站以外，还有可以使用代理来加速&lt;/p&gt;
&lt;h2 id=&#34;先通socks5&#34;&gt;先通SOCKS5！
&lt;/h2&gt;&lt;h3 id=&#34;安装ss&#34;&gt;安装ss
&lt;/h3&gt;&lt;p&gt;先贴上需要用到的软件github：
&lt;a class=&#34;link&#34; href=&#34;https://github.com/shadowsocks/shadowsocks-libev&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/shadowsocks/shadowsocks-libev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以及大概解释了什么是ss2，ss-go，ss-libev
&lt;a class=&#34;link&#34; href=&#34;https://shadowsocks5.github.io/en/spec/Implementations.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://shadowsocks5.github.io/en/spec/Implementations.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在云端实例命令行下，需要个尽可能简洁小巧又好用的工具，ss-libev可能会是我们的首选，ss-libev是一个轻量级安全 SOCKS5 代理，适用于嵌入式设备和低端设备，用纯 C 编写，体积小巧比较高效
我的云计算镜像是基于ubuntu22.04的
要安装它，直接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt install shadowsocks-libev
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;配置ss&#34;&gt;配置ss
&lt;/h3&gt;&lt;p&gt;然后编辑设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Edit the configuration file
sudo vim /etc/shadowsocks-libev/config.json
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- more --&gt;
&lt;p&gt;在&lt;code&gt;config.json&lt;/code&gt;里&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;server&amp;quot;:&amp;quot;my_server_ip&amp;quot;,
    &amp;quot;mode&amp;quot;:&amp;quot;tcp_and_udp&amp;quot;,
    &amp;quot;server_port&amp;quot;:8388,
    &amp;quot;local_port&amp;quot;:1080,
    &amp;quot;password&amp;quot;:&amp;quot;barfoo!&amp;quot;,
    &amp;quot;timeout&amp;quot;:600,
    &amp;quot;method&amp;quot;:&amp;quot;chacha20-ietf-poly1305&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server&lt;/code&gt; :您的主机名或服务器 IP (IPv4/IPv6)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mode&lt;/code&gt; :模式一般不动&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server_port&lt;/code&gt; :服务器端口号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local_port&lt;/code&gt; :本地端口号，一般默认就1080&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password&lt;/code&gt; :密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timeout&lt;/code&gt; :连接超时（以秒为单位）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt; :加密算法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些信息只要你找的代理供应商支持ss协议应该都可以拿到&lt;/p&gt;
&lt;p&gt;ps顺便给同学们复习下vim，懒得用vim的可以不看，按&lt;code&gt;a&lt;/code&gt;进入编辑模式，方向键移动光标，编辑完成后按两下 &lt;code&gt;ctrl+c&lt;/code&gt; 进入指令模式然后&lt;code&gt;:wq!&lt;/code&gt;保存更改并退出,如果直接退出不保存是&lt;code&gt;:q!&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;启动ss客户端&#34;&gt;启动ss客户端
&lt;/h3&gt;&lt;p&gt;任意目录输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ss-local
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;即可做为客户端启动
这里我启动成功以后显示：
&lt;img src=&#34;http://localhost:4420/images/20240109150557.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;ps这个软件可以以服务端启动，同样也是修改上面的&lt;code&gt;etc/shadowsocks-libev/config.json&lt;/code&gt;,这里挺容易混淆啊，我这里的目标是想给我的云上GPU计算实例代理加速，所以以客户端启动就行
如果要以服务端启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl start shadowsocks-libev.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;systemctl如果云上镜像里没有（大概率没有，容器镜像谁会带systemctl或者systemd呢~），可以尝试&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/shadowsocks-libev start
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装proxychains使软件走代理&#34;&gt;安装proxychains使软件走代理
&lt;/h2&gt;&lt;p&gt;上面只做到了客户端使用SOCKS5打通代理，接下来再用另外一个软件使我们指定的命令/app走这条SOCKS5线路，也就是需要个SOCKS5转HTTP的工具来为我们所用
这里发现了proxychains&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ProxyChains 是一个强制应用的 TCP 连接通过代理的工具，支持 Tor、HTTP、与 Socks 代理。ProxyChains 只会将当前应用的 TCP 连接转发至代理，而非全局代理。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;安装proxychains&#34;&gt;安装proxychains
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;sudo apt install proxychains
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;超快就安装好了&lt;/p&gt;
&lt;h3 id=&#34;配置&#34;&gt;配置
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt; vim /etc/proxychains.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[ProxyList]
# add proxy here ...
# meanwile
# defaults set to &amp;quot;tor&amp;quot;
#socks4    127.0.0.1 9050

# example
socks5  127.0.0.1 1080
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用&#34;&gt;使用
&lt;/h3&gt;&lt;p&gt;ProxyChains 的使用方式非常简单，直接在应用程序前加上 proxychains 即可
例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;proxychains git clone https://github.com/rofl0r/proxychains-ng
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但是据说ping是不行的，因为pin并不是TCP而是ICMP，所以可以尝试&lt;code&gt;proxychains ping google.com&lt;/code&gt;,总之我是能解析出IP但是会卡住ping不了，问题不大&lt;/p&gt;
&lt;p&gt;试试看是不是通了：
先试试&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl cip.cc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得到
&lt;img src=&#34;http://localhost:4420/images/20240109152134.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我们加上proxychains以后&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;proxychains curl cip.cc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:4420/images/20240109152400.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;看！效果立竿见影，而且可以灵活使用&lt;/p&gt;
&lt;p&gt;另外一种方法或许可以不装proxychains
直接设置变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export http_proxy=&amp;quot;socks5://127.0.0.1:1080&amp;quot;
export https_proxy=&amp;quot;socks5://127.0.0.1:1080&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可能也可以但没试过&lt;/p&gt;
&lt;h2 id=&#34;其他一些镜像方案&#34;&gt;其他一些镜像方案：
&lt;/h2&gt;&lt;h3 id=&#34;huggingface&#34;&gt;huggingface
&lt;/h3&gt;&lt;p&gt;运行python时前加&lt;code&gt;HF_ENDPOINT=https://hf-mirror.com&lt;/code&gt;，这样就可以实现后续走镜像加速了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HF_ENDPOINT=https://hf-mirror.com python your_script.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;详细用法：
&lt;a class=&#34;link&#34; href=&#34;https://hf-mirror.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://hf-mirror.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;github&#34;&gt;github
&lt;/h3&gt;&lt;p&gt;示例用法，直接github域名前加&lt;code&gt;https://mirror.ghproxy.com/&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://mirror.ghproxy.com/https://github.com/d8ahazard/sd_dreambooth_extension
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;详细见：
&lt;a class=&#34;link&#34; href=&#34;https://mirror.ghproxy.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mirror.ghproxy.com/&lt;/a&gt;
有些部署文件里还是用的之前的域名&lt;code&gt;https://ghproxy.com/&lt;/code&gt;,已失效，改用二级域名&lt;code&gt;https://mirror.ghproxy.com/&lt;/code&gt;即可&lt;/p&gt;
&lt;h2 id=&#34;附录&#34;&gt;附录
&lt;/h2&gt;&lt;h3 id=&#34;本文参考文章&#34;&gt;本文参考文章
&lt;/h3&gt;&lt;p&gt;linux命令行代理神器-proxychains
&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/166375631&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zhuanlan.zhihu.com/p/166375631&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Linux 让终端走代理的几种方法
&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/46973701&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zhuanlan.zhihu.com/p/46973701&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ss服务端和客户端安装
&lt;a class=&#34;link&#34; href=&#34;https://mkmerich.com/2018-09-23/shadowsocks%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%92%8C%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%89%E8%A3%85.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mkmerich.com/2018-09-23/shadowsocks%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%92%8C%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%89%E8%A3%85.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基本概念,什么是ss什么是socks5
&lt;a class=&#34;link&#34; href=&#34;https://reezon.github.io/2018/05/23/%E5%85%B3%E4%BA%8Ess%28%E9%85%B8%E9%85%B8%29%E5%92%8Cssr%28%E9%85%B8%E9%85%B8%E4%B9%B3%29%EF%BC%8C%E8%BF%98%E6%9C%89vpn%E5%92%8Csocks5/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://reezon.github.io/2018/05/23/%E5%85%B3%E4%BA%8Ess(%E9%85%B8%E9%85%B8)%E5%92%8Cssr(%E9%85%B8%E9%85%B8%E4%B9%B3)%EF%BC%8C%E8%BF%98%E6%9C%89vpn%E5%92%8Csocks5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用Curl时可以直接用socks5
&lt;a class=&#34;link&#34; href=&#34;https://blog.emacsos.com/use-socks5-proxy-in-curl.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.emacsos.com/use-socks5-proxy-in-curl.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;其他类似方案软件&#34;&gt;其他类似方案软件
&lt;/h3&gt;&lt;p&gt;sshuttle
&lt;a class=&#34;link&#34; href=&#34;https://github.com/sshuttle/sshuttle&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/sshuttle/sshuttle&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;yuhaiin
&lt;a class=&#34;link&#34; href=&#34;https://github.com/yuhaiin/yuhaiin&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/yuhaiin/yuhaiin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;clash-verge
&lt;a class=&#34;link&#34; href=&#34;https://github.com/zzzgydi/clash-verge&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/zzzgydi/clash-verge&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
