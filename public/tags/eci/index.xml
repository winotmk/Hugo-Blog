<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Eci on ExampleSite</title>
    <link>http://localhost:12371/tags/eci/</link>
    <description>Recent content in Eci on ExampleSite</description>
    <image>
      <title>ExampleSite</title>
      <url>http://localhost:12371/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:12371/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.144.2</generator>
    <language>en</language>
    <atom:link href="http://localhost:12371/tags/eci/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker01_用docker构建hexo和vsftpd与ddns镜像并且用阿里云容器服务ECI运行</title>
      <link>http://localhost:12371/posts/docker01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:12371/posts/docker01/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;一口气步子迈得有大，慢慢记录一下,如果你碰巧看到这个文章，希望这个文章的某些部分对你有帮助，来源我已尽量在文章中标出，还有很多部分是自己敲的&lt;/p&gt;
&lt;p&gt;了解ECI弹性容器：https://www.aliyun.com/product/eci
了解阿里云NAS文件存储：https://www.aliyun.com/product/nas&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么要用eci来运行hexo？&lt;/strong&gt;
因为好玩，同时来学习从pull到发布到运行整个docker镜像的流程，也想给自己的hexo博客找个新家，酷酷的那种
本博客之前是由树莓派上的hexo生成，部署到github上的
最近在捣鼓docker，一时想不起来有什么灵活小巧的服务拿来用docker玩，那么想着干脆把树莓派上hexo这部分服务做成镜像，需要用的时候拿出来用用想必是极好的（这么一来好像树莓派又要吃灰了）
恰巧最近又在琢磨阿里云ECI容器服务，所以理论上是可以用我自己打包好的镜像的
最后成品的结构大致如下图：&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;images/20230829140549.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里挂了3个镜像：
&lt;strong&gt;1.node.js+git+ssh+hexo&lt;/strong&gt;
主要是此镜像——由node.js+hexo组成的运行hexo环境，用过的都了解hexo是基于node.js的，每次我们生成文章的时候都会&lt;code&gt;hexo g -d&lt;/code&gt;，而运行这套需要一个环境容器
git和ssh主要是部署在github上用的，同时我习惯用VSCode的SSH FS来管理远程文件和写博客，主要是ssh连接，也方便我拿PuTTY和WinSCP远程登录管理
&lt;strong&gt;2.vsftpd&lt;/strong&gt;
一个常用的ftp服务，我是在本地些完再上传的，用这个是因为我发现如果要给文章插入图片，我还需要手动用ssh上传到hexo对应目录里。而用VSCode的SSH FS可以帮我自动同步本地工作目录和云上即将生成静态网页的hexo目录，非常方便！
&lt;strong&gt;3.ddns&lt;/strong&gt;
因为容器是即用即开，用完就释放的，每次开会新分配一个弹性IP做为外网接口，但是不想每次都去复制这个新的ip地址，那么就要用到动态域名解析，刚好我在阿里云上购买过一个我自己的域名，所以ddns这部分服务就拉出来做个镜像&lt;/p&gt;
&lt;p&gt;还挂了一个NAS盘：
&lt;img loading=&#34;lazy&#34; src=&#34;images/20230829142400.png&#34;&gt;
挂载以后：
&lt;img loading=&#34;lazy&#34; src=&#34;images/20230829142501.png&#34;&gt;
可见我的hexo，主题，文章，图片等等都存放在里面，服务容器可以随便释放拉取，数据不会受到影响，几百M的NAS容量价格抹零后可以忽略不计&lt;/p&gt;
&lt;p&gt;文章后面（第三部分）会说如何按我的需求构建定制这几个镜像，并上传到阿里云容器镜像ARK仓库以方便调用&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;vsftpd&lt;/strong&gt;还有&lt;strong&gt;ddns&lt;/strong&gt;可以与主镜像&lt;strong&gt;node.js+hexo&lt;/strong&gt;合并成一个大镜像吗？
&lt;strong&gt;当然可以&lt;/strong&gt;，但我实际做了几次以后发现把ftp，ddns这样常用的服务功能单独拿出来会方便得多的多，毕竟我想起别得服务，也可以给他们挂上ftp等常用服务，我也可以选择不挂，这样容器的优势就体现出来了。我可以把单一的服务都做成单独的小镜像，需要哪个挂哪个，性能消耗也很小&lt;/p&gt;
&lt;p&gt;整套下来有这些部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;docker基本操作&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;已经启动的本地容器修改端口，启动容器时即启动服务等&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;打包制作自己的docker镜像(dockerfile)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;docker镜像打包并上传到阿里云镜像库ARK&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;eci容器创建模板和eci命令行工具使用&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;hexo本地编辑环境设置————如何用VSCode舒服的写MD文档&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;附表：
群晖搭建私有镜像仓库和dockerengine设置
eci价格计算表&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-docker-基本操作&#34;&gt;1. docker 基本操作&lt;/h2&gt;
&lt;p&gt;博主吐槽一下，总觉得一些类似run，commit操作完全可以做成一个美观好用的UI控制软件，但是docker destop就是不做，然后大家都默认敲命令行是方便的，好用的。十分不解，可能需要ui的不会写ui，熟练使用命令行的也不需要什么ui吧，诶
——后面随着对docker了解的深入，明白它不是虚拟机，用得还是linux内核，这么一想，处处真是浓浓的linux味，现在能提供一个windows下的Docker Desktop桌面程序，已经非常得不错了！
资料网站：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/cli/&#34;&gt;官方命令大全&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://chunchengwei.github.io/ruan-jian/ji-yu-docker-de-hexo-bo-ke-da-jian/&#34;&gt;基于Docker的Hexo博客搭建&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个基本操作写得还行下次爬一篇下来吧：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yingclin.github.io/2018/docker-basic.html&#34;&gt;[小抄] Docker 基本命令&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;11-运行容器&#34;&gt;1.1 运行容器&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker run -it -d --name &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;container-name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; -p 8088:80 &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;image-name&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里是将容器内的80端口映射到宿主机的8088端口&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker01.1_eci价格计算表</title>
      <link>http://localhost:12371/posts/docker01.1_%E4%BB%B7%E6%A0%BC%E8%AE%A1%E7%AE%97%E8%A1%A8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:12371/posts/docker01.1_%E4%BB%B7%E6%A0%BC%E8%AE%A1%E7%AE%97%E8%A1%A8/</guid>
      <description>&lt;p&gt;计费文档：
&lt;a href=&#34;https://help.aliyun.com/document_detail/447697.html&#34;&gt;https://help.aliyun.com/document_detail/447697.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;定价标准：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;vCPU单价（vCPU）：0.000049 元/秒
内存单价（GiB）： 0.00000613 元/秒&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;所以可知：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;规格&lt;/th&gt;
          &lt;th&gt;秒&lt;/th&gt;
          &lt;th&gt;分钟&lt;/th&gt;
          &lt;th&gt;小时&lt;/th&gt;
          &lt;th&gt;天&lt;/th&gt;
          &lt;th&gt;月&lt;/th&gt;
          &lt;th&gt;年&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;每1u&lt;/td&gt;
          &lt;td&gt;0.00004900&lt;/td&gt;
          &lt;td&gt;0.00294&lt;/td&gt;
          &lt;td&gt;0.1764&lt;/td&gt;
          &lt;td&gt;4.2336&lt;/td&gt;
          &lt;td&gt;127.008&lt;/td&gt;
          &lt;td&gt;1545.264&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;每1G内存&lt;/td&gt;
          &lt;td&gt;0.00000613&lt;/td&gt;
          &lt;td&gt;0.0003678&lt;/td&gt;
          &lt;td&gt;0.022068&lt;/td&gt;
          &lt;td&gt;0.529632&lt;/td&gt;
          &lt;td&gt;15.88896&lt;/td&gt;
          &lt;td&gt;193.31568&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;eci价格计算：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;实例规格&lt;/th&gt;
          &lt;th&gt;秒&lt;/th&gt;
          &lt;th&gt;分钟&lt;/th&gt;
          &lt;th&gt;小时&lt;/th&gt;
          &lt;th&gt;天&lt;/th&gt;
          &lt;th&gt;月&lt;/th&gt;
          &lt;th&gt;年&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;0.25u	0.5G&lt;/td&gt;
          &lt;td&gt;0.00001532&lt;/td&gt;
          &lt;td&gt;0.0009189&lt;/td&gt;
          &lt;td&gt;0.055134&lt;/td&gt;
          &lt;td&gt;1.323216&lt;/td&gt;
          &lt;td&gt;39.69648&lt;/td&gt;
          &lt;td&gt;482.97384&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0.5u	1G&lt;/td&gt;
          &lt;td&gt;0.00003063&lt;/td&gt;
          &lt;td&gt;0.0018378&lt;/td&gt;
          &lt;td&gt;0.110268&lt;/td&gt;
          &lt;td&gt;2.646432&lt;/td&gt;
          &lt;td&gt;79.39296&lt;/td&gt;
          &lt;td&gt;965.94768&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2u	4G&lt;/td&gt;
          &lt;td&gt;0.00012252&lt;/td&gt;
          &lt;td&gt;0.0073512&lt;/td&gt;
          &lt;td&gt;0.441072&lt;/td&gt;
          &lt;td&gt;10.585728&lt;/td&gt;
          &lt;td&gt;317.57184&lt;/td&gt;
          &lt;td&gt;3863.79072&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2u	8G&lt;/td&gt;
          &lt;td&gt;0.00014704&lt;/td&gt;
          &lt;td&gt;0.0088224&lt;/td&gt;
          &lt;td&gt;0.529344&lt;/td&gt;
          &lt;td&gt;12.704256&lt;/td&gt;
          &lt;td&gt;381.12768&lt;/td&gt;
          &lt;td&gt;4637.05344&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4u	8G&lt;/td&gt;
          &lt;td&gt;0.00024504&lt;/td&gt;
          &lt;td&gt;0.0147024&lt;/td&gt;
          &lt;td&gt;0.882144&lt;/td&gt;
          &lt;td&gt;21.171456&lt;/td&gt;
          &lt;td&gt;635.14368&lt;/td&gt;
          &lt;td&gt;7727.58144&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;64u	256G&lt;/td&gt;
          &lt;td&gt;0.00470528&lt;/td&gt;
          &lt;td&gt;0.2823168&lt;/td&gt;
          &lt;td&gt;16.939008&lt;/td&gt;
          &lt;td&gt;406.536192&lt;/td&gt;
          &lt;td&gt;12196.08576&lt;/td&gt;
          &lt;td&gt;148385.7101&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;一秒0.0047元很便宜吗？一月要1.2w！可以说被安排得明明白白了&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
