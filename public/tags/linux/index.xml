<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Linux on WinNote</title>
        <link>http://localhost:1313/tags/linux/</link>
        <description>Recent content in Linux on WinNote</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>winotmk</copyright>
        <lastBuildDate>Wed, 25 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/linux/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>calibre_web的pdf封面提取问题</title>
        <link>http://localhost:1313/posts/240925_calibre_web%E7%9A%84pdf%E5%B0%81%E9%9D%A2%E6%8F%90%E5%8F%96%E9%97%AE%E9%A2%98/</link>
        <pubDate>Wed, 25 Sep 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/240925_calibre_web%E7%9A%84pdf%E5%B0%81%E9%9D%A2%E6%8F%90%E5%8F%96%E9%97%AE%E9%A2%98/</guid>
        <description>&lt;p&gt;在用&lt;code&gt;johngong/calibre-web:latest&lt;/code&gt;这个镜像 &lt;a class=&#34;link&#34; href=&#34;https://hub.docker.com/r/johngong/calibre-web&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://hub.docker.com/r/johngong/calibre-web&lt;/a&gt;&lt;br&gt;
作为自己nas上的图书馆时发现pdf文件无法生成封面，&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240925124359.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;断断续续排查了两周，百思不得解，尝试过：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;设置imagemagick的&lt;code&gt;policy.xml&lt;/code&gt;文件(&lt;code&gt;/etc/Imagemagick/policy.xml&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;使用lscr.io/linuxserver/calibre-web:latest的镜像&lt;/li&gt;
&lt;li&gt;自己重新构建镜像&lt;/li&gt;
&lt;li&gt;重新安装calibre-web包和重装imagemagick包&lt;br&gt;
都解决不了，总之是十分折腾，最后认为可能是&lt;code&gt;johngong/calibre-web:latest&lt;/code&gt;可能是里少了一个&lt;code&gt;imagemagick-pdf&lt;/code&gt;包&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最终有效的解决方法的折腾流程&#34;&gt;最终有效的解决方法的折腾流程
&lt;/h2&gt;&lt;p&gt;我尝试上传pdf文件，然后打开日志（日志级别设置为DEBUG）&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240925123504.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
查看文件：/config/calbre-web/calbre-web.log&lt;br&gt;
有这么一行：&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240925123738.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[2024-09-25 12:10:22,144]  WARN {cps.uploader:237} Cannot extract cover image, using default: no decode delegate for this image format `PDF&#39; @ error/constitute.c/ReadImage/746
[2024-09-25 12:10:22,145]  WARN {cps.uploader:238} On Windows this error could be caused by missing ghostscript
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;PDF转就转不出来&lt;br&gt;
所以找到了：&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240925123303.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/ImageMagick/ImageMagick/issues/6148&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ImageMagick/ImageMagick/issues/6148&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apk add --no-cache imagemagick imagemagick-pdf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完以后，再次尝试上传pdf格式的书，就看见封面辣！！&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240925123414.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;johngongcalibre-web的一些设置&#34;&gt;johngong/calibre-web的一些设置
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/gshang2017/docker/issues/133&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/gshang2017/docker/issues/133&lt;/a&gt;&lt;br&gt;
如果一编辑图书的元数据就卡死，可用尝试：&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240925134344.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
这两条设置为true,则&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240925134613.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
这里不会出现google等选项，家里的nas没有梯子环境，反而会导致卡死，所以禁用google吧。。也没啥用&lt;/p&gt;
&lt;h2 id=&#34;弯路&#34;&gt;弯路
&lt;/h2&gt;&lt;p&gt;这里想记一下这个弯路，在calibre-web的FAQ里赫然记着有关pdf文件转不出封面的解决办法，说要改&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240925140205.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/janeczku/calibre-web/wiki/FAQ#what-to-do-if-cover-pictures-are-not-extracted-from-pdf-files&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/janeczku/calibre-web/wiki/FAQ#what-to-do-if-cover-pictures-are-not-extracted-from-pdf-files&lt;/a&gt;&lt;br&gt;
所以可以有&lt;code&gt;/etc/Imagemagick/policy.xml&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;policymap&amp;gt;
    &amp;lt;policy domain=&amp;quot;coder&amp;quot; rights=&amp;quot;read | write&amp;quot; pattern=&amp;quot;{MSVG,MVG,PS,PDF,RSVG,SVG,XPS}&amp;quot; /&amp;gt;
&amp;lt;/policymap&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这是最容易找到的一种解法，但我自己试了无用，没有上面的装&lt;code&gt;apk add imagemagick-pdf&lt;/code&gt;好使&lt;/p&gt;
&lt;h2 id=&#34;尝试出来的另一种pdf封面提取可行方法&#34;&gt;尝试出来的另一种PDF封面提取可行方法
&lt;/h2&gt;&lt;p&gt;这样做出来的calibre-web镜像可以实现PDF转换，但是没有电子书格式转换，没有禁用google元数据搜索，没有中文环境，懒得自己做了，还是修修用&lt;code&gt;johngong/calibre-web&lt;/code&gt;包吧&lt;br&gt;
为了试验，我用&lt;code&gt;FROM ubuntu:latest&lt;/code&gt;作为镜像基底，然后：&lt;/p&gt;
&lt;h3 id=&#34;装calibre-web&#34;&gt;装calibre-web
&lt;/h3&gt;&lt;p&gt;安装calibre-web：&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240925132535.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/janeczku/calibre-web?tab=readme-ov-file#installation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/janeczku/calibre-web?tab=readme-ov-file#installation&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/janeczku/calibre-web/wiki/Dependencies-in-Calibre-Web-Linux-and-Windows&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/janeczku/calibre-web/wiki/Dependencies-in-Calibre-Web-Linux-and-Windows&lt;/a&gt;&lt;br&gt;
这里也有提到&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://chenjiehua.me/others/calibre-web-personal-book-store.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://chenjiehua.me/others/calibre-web-personal-book-store.html&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install calibreweb
pip install calibreweb[metadata]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;装imagemagick&#34;&gt;装imagemagick
&lt;/h3&gt;&lt;p&gt;然后安装imagemagick&lt;br&gt;
官方：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://imagemagick.org/script/download.php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://imagemagick.org/script/download.php&lt;/a&gt;&lt;br&gt;
也有提到：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/echohye/p/17727865.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/echohye/p/17727865.html&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt install imagemagick
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;装完后&lt;code&gt;convert&lt;/code&gt;和&lt;code&gt;magick&lt;/code&gt;命令应当是可用的&lt;/p&gt;
&lt;h3 id=&#34;手动装imagemagick&#34;&gt;手动装imagemagick
&lt;/h3&gt;&lt;p&gt;或者我用上面官方的magick文件手动配貌似也行：&lt;br&gt;
先把magick文件放入根目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./magick --appimage-extract
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.appimage.org/user-guide/troubleshooting/fuse.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.appimage.org/user-guide/troubleshooting/fuse.html&lt;/a&gt;&lt;br&gt;
提到了可以用&lt;code&gt;--appimage-extract&lt;/code&gt;直接释放出软件包来&lt;br&gt;
会发现释放出来文件在&lt;code&gt;/squashfs-root&lt;/code&gt;目录里&lt;br&gt;
设置环境变量：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export MAGICK_HOME=&amp;quot;/squashfs-root/usr&amp;quot;
export PATH=&amp;quot;$MAGICK_HOME/bin:$PATH&amp;quot;
export LD_LIBRARY_PATH=&amp;quot;${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$MAGICK_HOME/lib&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后imagemagick应该就能用了。。&lt;/p&gt;
&lt;h3 id=&#34;其他&#34;&gt;其他
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;lscr.io/linuxserver/calibre-web:latest&lt;/code&gt;&lt;br&gt;
这个镜像也不小，但功能还算完整，上传pdf可直接显示封面，但不是中文环境，而且部署到我的nas上后死活传不了新书说什么无法写入，懒得深究了，弃之&lt;/p&gt;
</description>
        </item>
        <item>
        <title>给docker容器内配置中文环境(minecraft开服相关)</title>
        <link>http://localhost:1313/posts/240815_%E7%BB%99docker%E5%AE%B9%E5%99%A8%E5%86%85%E9%85%8D%E7%BD%AE%E4%B8%AD%E6%96%87%E7%8E%AF%E5%A2%83/</link>
        <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/240815_%E7%BB%99docker%E5%AE%B9%E5%99%A8%E5%86%85%E9%85%8D%E7%BD%AE%E4%B8%AD%E6%96%87%E7%8E%AF%E5%A2%83/</guid>
        <description>&lt;p&gt;最近找到个整合包（因为懒得一个个翻bbs&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/read/cv7403697/?spm_id_from=333.999.collection.opus.click&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.bilibili.com/read/cv7403697/?spm_id_from=333.999.collection.opus.click&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815141238.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
这包里的mod和之前自己开的服务器高度相似，太棒啦，从1.7.10直升1.12.2，基本还都是熟悉的味道&lt;br&gt;
才知道mcbbs已经无了，然后才可发现mc百科已经这么好用了，连接直连发布curseforge和github，省去搬运步骤，也蛮好的！&lt;br&gt;
服务端有了，想通过docker容器部署到我的群晖NAS上，DS720+扩容了根16G内存条放着也是放着&lt;/p&gt;
&lt;h2 id=&#34;选取docker镜像&#34;&gt;选取docker镜像
&lt;/h2&gt;&lt;p&gt;docker hub里有官方镜像，用的是这个，体积精简，只运行环境jre就够了&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://hub.docker.com/_/openjdk/tags?page=1&amp;amp;page_size=&amp;amp;name=8u342&amp;amp;ordering=&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://hub.docker.com/_/openjdk/tags?page=1&amp;page_size=&amp;name=8u342&amp;ordering=&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815121544.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
所以直接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker pull openjdk:8u342-jre-slim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后直接这样运行就好了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it -d \
-p 25565:25565 \
-v E:\game\MC\1.12.2mohist_服务端:/mc \
-w /mc \
--name MC1122 \
openjdk:8u342-jre-slim \
java -Xms2G -Xmx8G -XX:+UseG1GC -XX:+AggressiveOpts -XX:+UseCompressedOops -jar Mohist-1.12.2-c950429-server.jar nogui
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;虽然长，但是总的来说挺简单，用&lt;code&gt;openjdk:8u342-jre-slim&lt;/code&gt;镜像运行&lt;code&gt;java&lt;/code&gt;命令罢了，但是！&lt;br&gt;
出现了一个人让人感觉不爽的小问题，服务端的log输出以及游戏内服务端来的输出都是英文的，这在之前直接windows运行时不是这样的，所以第一反应是语言环境问题&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815123217.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815123240.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;设置环境变量&#34;&gt;设置环境变量
&lt;/h2&gt;&lt;p&gt;在&lt;code&gt;docker run&lt;/code&gt;的时候加上个参数&lt;code&gt;-e LANG=&amp;quot;zh_CN.UTF-8&amp;quot;&lt;/code&gt;，类似&lt;code&gt;export  LANG=zh_CN.UTF-8&lt;/code&gt;&lt;br&gt;
确定环境变量生效了：&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815123341.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
但没解决问题，反而似乎导致启动的时候不认识中文的mod文件名了&lt;/p&gt;
&lt;p&gt;在查找这个之后：&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/myli92/article/details/139909499?csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22139909499%22%2C%22source%22%3A%22unlogin%22%7D&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;docker 容器设置中文环境&lt;/a&gt;&lt;br&gt;
发现单纯设置&lt;code&gt;LANG&lt;/code&gt;的变量不行，容器里就没有中文字符集的&lt;/p&gt;
&lt;h3 id=&#34;查看已有语言&#34;&gt;查看已有语言
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;locale -a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240815123200.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装中文环境&#34;&gt;安装中文环境
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/star1210644725/article/details/108747049&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用DockerFile的方式快速构建一个基础镜像，解决中文环境问题&lt;/a&gt;&lt;br&gt;
所以安装中文环境的命令可以是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install -y language-pack-zh-hans
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但这样不行！因为这个是ubuntu的命令，查看我的docker镜像的信息发现是以debian基底的&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815132128.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;看到:&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/forever_008/article/details/103720389&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Debian系统安装中文包&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg-reconfigure locales
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后再选&lt;code&gt;zh_CN.UTF-8&lt;/code&gt;，可行，但是集成到镜像里没那么好使，还好有别的方法&lt;/p&gt;
&lt;h2 id=&#34;制作新镜像&#34;&gt;制作新镜像
&lt;/h2&gt;&lt;p&gt;参考：&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/wyazyf/article/details/90676364&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;dockerfile文件中给debian设置中文支持&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;dockerfile&#34;&gt;dockerfile
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;FROM openjdk:8u342-jre-slim
RUN apt-get clean &amp;amp;&amp;amp; apt-get update &amp;amp;&amp;amp; apt-get install -y locales &amp;amp;&amp;amp;  localedef -c -f UTF-8 -i zh_CN zh_CN.utf8
WORKDIR /mc
ENV LANG zh_CN.UTF-8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;保存为dockerfile文件然后&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker build -t jre8u342_ch .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240815123827.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;测试运行&#34;&gt;测试运行
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;docker run -it -d \
-p 25565:25565 \
-v E:\game\MC\1.12.2mohist_服务端:/mc \
--name MC1122 \
jre8u342_ch:latest \
java -Xms2G -Xmx8G -XX:+UseG1GC -XX:+AggressiveOpts -XX:+UseCompressedOops -jar Mohist-1.12.2-c950429-server.jar nogui
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;因为dockerfile里已经设置过&lt;code&gt;WORKDIR&lt;/code&gt;了所以不需要&lt;code&gt;-w&lt;/code&gt;参数&lt;/p&gt;
&lt;p&gt;这下不会报英文了&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815124038.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815124056.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
游戏里也是中文环境的返回信息&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815124137.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;部署到群晖&#34;&gt;部署到群晖
&lt;/h2&gt;&lt;p&gt;先把做好的镜像打包出来，方便传到群晖NAS里&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker save -o jre8u342_ch.tar jre8u342_ch:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;先导入这个镜像&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815132343.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
然后简单配置一下端口和mc服务器目录就可以了,和上面的&lt;code&gt;docker run&lt;/code&gt;其实是一样的&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815132446.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
端口的&lt;code&gt;25565&lt;/code&gt;是游戏端口&lt;code&gt;25575&lt;/code&gt;用作管理，下面会提到&lt;/p&gt;
&lt;h2 id=&#34;服务器远程管理&#34;&gt;服务器远程管理
&lt;/h2&gt;&lt;p&gt;用容器托管运行了，上哪去敲&lt;code&gt;/op xxxx&lt;/code&gt;和&lt;code&gt;/stop&lt;/code&gt;之类的管理命令呢？&lt;br&gt;
可以用rcon方案！&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://wiki.vg/RCON&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.vg/RCON&lt;/a&gt;&lt;br&gt;
具体就是用这个软件：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Tiiffi/mcrcon&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Tiiffi/mcrcon&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装和服务端配置&#34;&gt;安装和服务端配置：
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/Tiiffi/mcrcon.git
cd mcrcon
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后服务端也要配置一下，在&lt;code&gt;server.properties&lt;/code&gt;里的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;enable-rcon=false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;enable-rcon=true
rcon.password=your_passwd
rcon.port=25575
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;用法&#34;&gt;用法：
&lt;/h3&gt;&lt;p&gt;先连接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mcrcon -H 服务器地址 -p your_passwd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后就可以一样敲各种minecraft管理命令了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240815125134.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;好了不说了博主我要去挖矿开荒了&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815133408.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240815133429.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考
&lt;/h2&gt;&lt;p&gt;debian文档，第 8 章 国际化和本地化：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.debian.org/doc/manuals/debian-reference/ch08.zh-cn.html#_rationale_for_utf_8_locale&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.debian.org/doc/manuals/debian-reference/ch08.zh-cn.html#_rationale_for_utf_8_locale&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;类似的打包好的docker环境MC服务器镜像有：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/itzg/docker-minecraft-server/tree/master&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/itzg/docker-minecraft-server/tree/master&lt;/a&gt;&lt;br&gt;
对我来说功能有点多，只是参考参考&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Linux和docker常用命令</title>
        <link>http://localhost:1313/posts/240619_linux%E5%91%BD%E4%BB%A4/</link>
        <pubDate>Wed, 19 Jun 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/240619_linux%E5%91%BD%E4%BB%A4/</guid>
        <description>&lt;p&gt;还是会有很多不常用的命令要来回查，仅记录，绝非完整命令参考&lt;/p&gt;
&lt;h2 id=&#34;文件操作相关&#34;&gt;文件操作相关
&lt;/h2&gt;&lt;h3 id=&#34;复制目录&#34;&gt;复制目录
&lt;/h3&gt;&lt;p&gt;复制目录dir1和dir1目录下的文件到dir2目录里&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cp -r dir1 dir2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装lrzsz实现zmodem串口文件传输&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rz 下载Zmodem
xz 上传Zmodem
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;windterm下支持直接拖拽文件，但是也要安装lrzsz以支持命令&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/lidabo/p/4780866.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/lidabo/p/4780866.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;挂载u盘&#34;&gt;挂载U盘
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;fdisk -l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240619152526.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
可以看到一块14.84GB的SD卡，位置在&lt;code&gt;/dev/sda1&lt;/code&gt;&lt;br&gt;
使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mount -t vfat /dev/sda1 /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;来挂载U盘&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240619152710.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
&lt;code&gt;cd&lt;/code&gt;到&lt;code&gt;/mnt&lt;/code&gt;即可看到U盘里的文件了，另外可以在&lt;code&gt;/mnt&lt;/code&gt;里新建文件夹&lt;code&gt;mkdir xxxxx&lt;/code&gt;，再挂载到文件夹里&lt;/p&gt;
&lt;p&gt;卸载：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;umount /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;打包压缩和解压&#34;&gt;打包压缩和解压
&lt;/h3&gt;&lt;p&gt;压缩&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tar -czvf ***.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;解压&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tar -xzvf ***.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;docker&#34;&gt;docker
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://yeasy.gitbook.io/docker_practice/container/run&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://yeasy.gitbook.io/docker_practice/container/run&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;启动docker:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo systemctl start docker
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看已有镜像：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker ps -a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;启动已终止容器:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker container start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行新的镜像run：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -it -d --name hexo_debian -p 22:22 -p 4000:4000 -v XXX:/hexo/ hexo_debian:V02
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;save:&lt;br&gt;
把本地镜像打包成tar方便带走&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker save -o jre8u342_ch.tar jre8u342_ch:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打包好的tar用的时候可以：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker load -i {image_name}.tar
docker load --input {image_name}.tar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果没有tag可以手动打tag~&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker tag {image_id} {image_name}:{image_tag}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;自用的docker run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker run -d --name=calibre-web -e PUID=1000 -e PGID=1000 -e TZ=Etc/UTC -e DOCKER_MODS=linuxserver/mods:universal-calibre -p 8083:8083 -v D:\calibre_test\config:/config -v D:\calibre_test\library:/books --restart unless-stopped lscr.io/linuxserver/calibre-web:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;docker run -d --name=calibre -e PUID=1000 -e PGID=1000 -e TZ=Asia/Shanghai -e LC_ALL=zh_CN.UTF-8 -p 8080:8080 -p 8181:8181 -p 8081:8081 -v D:\calibre_test\library:/library -v D:\calibre_test\config:/config --restart unless-stopped lscr.io/linuxserver/calibre:latest
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- more --&gt;
&lt;h4 id=&#34;docker-compose&#34;&gt;docker compose
&lt;/h4&gt;&lt;p&gt;启动组&lt;br&gt;
&lt;code&gt;docker compose -f hexo_debian_DockerCompose.yml up -d &lt;/code&gt;&lt;br&gt;
关闭组&lt;br&gt;
&lt;code&gt;docker compose -f hexo_debian_DockerCompose.yml down -v&lt;/code&gt;&lt;br&gt;
启动但是会留在容器里&lt;br&gt;
&lt;code&gt;docker compose up&lt;/code&gt;&lt;br&gt;
启动不留在容器里&lt;br&gt;
&lt;code&gt;docker compose up -d&lt;/code&gt;&lt;br&gt;
进入docker容器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker exec -it XXX /bin/bash
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;退出容器但保留按&lt;code&gt;ctrl+P+Q&lt;/code&gt;&lt;br&gt;
也可以直接接要在容器里执行的命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker exec hexo hexo g -d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;拷贝容器内的文件出来，在宿主机上输入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker cp -a vsftpd:/etc/services /root/
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;screen&#34;&gt;screen
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;# 创建一个新的窗口
screen -S test
 
# 进入窗口后 执行文件
python test.py
 
# 退出当前窗口
ctrl+a+d   （方法1：保留当前窗口）
screen -d  （方法2：保留当前窗口）
exit       （方法3：退出程序，并关闭窗口）
 
# 查看窗口
screen -ls
 
# 重新连接窗口
screen -r id或窗口名称
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        <item>
        <title>地理数据采集器计划</title>
        <link>http://localhost:1313/posts/240617_%E5%9C%B0%E7%90%86%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E5%99%A8%E8%AE%A1%E5%88%92/</link>
        <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/240617_%E5%9C%B0%E7%90%86%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86%E5%99%A8%E8%AE%A1%E5%88%92/</guid>
        <description>&lt;h2 id=&#34;简介&#34;&gt;简介
&lt;/h2&gt;&lt;p&gt;想要做一个便携的小设备，能够实现以下功能&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;记录当前地点的气压，温度，湿度等地理信息&lt;/li&gt;
&lt;li&gt;记录GPS坐标信息&lt;/li&gt;
&lt;li&gt;考虑加上摄像头记录当前周围视觉环境，同时可以将上述信息水印（字幕)在照片上&lt;/li&gt;
&lt;li&gt;存储所有记录的数据以便之后进行可视化数据生成，可以用类似XML，Json，或者找有没有嵌入式轻量数据库实现&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;它最好有以下这样的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;手机一般大小可以塞进口袋&lt;/li&gt;
&lt;li&gt;一定程度的防摔防水外壳&lt;/li&gt;
&lt;li&gt;续航可以接受2-3天一充电&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以我的打算用现有的能买到的小板子和单片机来做，预算不是大问题，大概1500-2000，（包含试错和学习成本）考虑过几种方向：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ESP32&lt;/li&gt;
&lt;li&gt;树莓派PICO&lt;/li&gt;
&lt;li&gt;幸狐的板子和摄像头&lt;/li&gt;
&lt;li&gt;树莓派Zero&lt;br&gt;
最后发现现在目前树莓派zero2w的价格只有一百出头了，可能比某些arduino的原版板子还便宜，值得一试，幸狐看起来也不错的样子，回头再研究&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下面这是树莓派zero2w跑通串口通信时的样子&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240617150029.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;这个网站不错：https://pinout.xyz/&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240618185812.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可知右上这几个接口就可以实现TTL的UART连接了，我尝试ground是要接的&lt;/p&gt;
&lt;h2 id=&#34;资料&#34;&gt;资料
&lt;/h2&gt;&lt;h3 id=&#34;ft232串口工具&#34;&gt;FT232串口工具
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.waveshare.net/wiki/FT232_USB_UART_Board&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.waveshare.net/wiki/FT232_USB_UART_Board&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240619160444.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;gps模块&#34;&gt;GPS模块
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.waveshare.net/wiki/LC76G_GPS_Module&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.waveshare.net/wiki/LC76G_GPS_Module&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240619160514.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
在准备安装micropyGPS时&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240619160324.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
提示&lt;code&gt;No module namd setuptools&lt;/code&gt;&lt;br&gt;
怀疑需要执行&lt;br&gt;
&lt;code&gt;apt-get install python3-setuptools&lt;/code&gt;&lt;br&gt;
可惜目前没有网络环境，回家尝试了&lt;/p&gt;
&lt;h3 id=&#34;raspberry-zero-2w&#34;&gt;Raspberry Zero 2W
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.waveshare.net/wiki/Raspberry_Pi_Zero_2_W&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.waveshare.net/wiki/Raspberry_Pi_Zero_2_W&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240619160629.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;ups-模块&#34;&gt;UPS 模块
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.waveshare.net/wiki/UPS_HAT_%28C%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.waveshare.net/wiki/UPS_HAT_(C)&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240619160718.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;环境传感器&#34;&gt;环境传感器
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.waveshare.net/shop/Environment-Sensor-HAT.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.waveshare.net/shop/Environment-Sensor-HAT.htm&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240619160754.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;项目软件&#34;&gt;项目/软件
&lt;/h2&gt;&lt;h3 id=&#34;数据可视化相关&#34;&gt;数据可视化相关
&lt;/h3&gt;&lt;h4 id=&#34;很不错的开源教程data-science-for-beginners&#34;&gt;很不错的开源教程Data-Science-For-Beginners
&lt;/h4&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://microsoft.github.io/Data-Science-For-Beginners/#/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://microsoft.github.io/Data-Science-For-Beginners/#/&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;matplotlib&#34;&gt;Matplotlib
&lt;/h4&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://matplotlib.org/stable/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://matplotlib.org/stable/index.html&lt;/a&gt;&lt;br&gt;
Matplotlib是一个出色的库，可用于创建各种简单和复杂的图表&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://microsoft.github.io/Data-Science-For-Beginners/#/3-Data-Visualization/09-visualization-quantities/README&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://microsoft.github.io/Data-Science-For-Beginners/#/3-Data-Visualization/09-visualization-quantities/README&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240717142402.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;streamlit&#34;&gt;Streamlit
&lt;/h4&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/streamlit/streamlit&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/streamlit/streamlit&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240717143550.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
更偏向于python库直接生成web，同时也有很多数据可视化的内容，更实用？便于展示&lt;/p&gt;
&lt;h4 id=&#34;powerbi&#34;&gt;powerbi
&lt;/h4&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.microsoft.com/en-us/power-platform/products/power-bi&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.microsoft.com/en-us/power-platform/products/power-bi&lt;/a&gt;&lt;br&gt;
似乎是微软的web数据可视化绘图&lt;/p&gt;
&lt;h4 id=&#34;gpxsee&#34;&gt;GPXSee
&lt;/h4&gt;&lt;p&gt;配合gps数据收集可以展示出来&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/tumic0/GPXSee&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/tumic0/GPXSee&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240719120310.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;图形库&#34;&gt;图形库
&lt;/h3&gt;&lt;h4 id=&#34;lvgl&#34;&gt;LVGL
&lt;/h4&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://lvgl.100ask.net/master/get-started/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://lvgl.100ask.net/master/get-started/index.html&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/lvgl/lvgl&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/lvgl/lvgl&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240719122911.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;squareline-studio-ui---配合上面的lvgl用&#34;&gt;SquareLine Studio UI - 配合上面的LVGL用
&lt;/h4&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://squareline.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://squareline.io/&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1DX4y1v727/?vd_source=b7b7bdf106a064893c3c79e4a961f383&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.bilibili.com/video/BV1DX4y1v727/?vd_source=b7b7bdf106a064893c3c79e4a961f383&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240719121330.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;guiguider-同上类别但免费&#34;&gt;guiguider 同上类别但免费
&lt;/h4&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1yW421R7zK/?spm_id_from=333.788.recommend_more_video.7&amp;amp;vd_source=b7b7bdf106a064893c3c79e4a961f383&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.bilibili.com/video/BV1yW421R7zK/?spm_id_from=333.788.recommend_more_video.7&amp;vd_source=b7b7bdf106a064893c3c79e4a961f383&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240719122655.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;figma&#34;&gt;figma
&lt;/h4&gt;&lt;p&gt;UI前期设计软件&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240719121825.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;ui-框架oled-ui-astra&#34;&gt;UI 框架：oled-ui-astra
&lt;/h4&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/AstraThreshold/oled-ui-astra&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/AstraThreshold/oled-ui-astra&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.bilibili.com/video/BV1i4421D7nJ/?vd_source=b7b7bdf106a064893c3c79e4a961f383&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.bilibili.com/video/BV1i4421D7nJ/?vd_source=b7b7bdf106a064893c3c79e4a961f383&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240719120151.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>令人头疼的vsftpd,ftp端口修改设置配置</title>
        <link>http://localhost:1313/posts/240617_%E4%BB%A4%E4%BA%BA%E5%A4%B4%E7%96%BC%E7%9A%84vsftpd/</link>
        <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/240617_%E4%BB%A4%E4%BA%BA%E5%A4%B4%E7%96%BC%E7%9A%84vsftpd/</guid>
        <description>&lt;p&gt;这么个小小的软件花费了不成正比的时间去弄他，十分令人头疼，简单记录几点重要的设置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim /etc/vsftpd.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;vsftpd 配置文件：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://gnu-linux.readthedocs.io/zh/latest/Chapter02/90_vsftpd.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://gnu-linux.readthedocs.io/zh/latest/Chapter02/90_vsftpd.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;修改ftp的端口&#34;&gt;修改ftp的端口
&lt;/h2&gt;&lt;p&gt;ftp的监听和实际数据传输是两个端口，如果要改最好都改&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;connect_from_port_20=NO
ftp_data_port=12520
listen_port=12521
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;pasv模式时的端口范围设置，假如用docker运行这些端口都要转出来&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pasv_promiscuous=YES
pasv_min_port=31100
pasv_max_port=31110
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我至今没太搞明白ftp的主动与被动模式的区别，以及能不能只用其中一种模式来工作..&lt;/p&gt;
&lt;p&gt;另外还有系统的services里&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim /etc/services

#ftp-data        20/tcp
#ftp-data        20/udp
ftp-data        12520/tcp
ftp-data        12520/udp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个不确定是否必要但还是改了吧&lt;/p&gt;
&lt;h2 id=&#34;中文乱码&#34;&gt;中文乱码
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240617155755.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;一篇不错的配置说明&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.starryvoid.com/archives/1044.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.starryvoid.com/archives/1044.html&lt;/a&gt;&lt;br&gt;
主要提到了utf8的编码问题&lt;/p&gt;
&lt;p&gt;&lt;code&gt;utf8_filesystem=YES&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果这样还没解决，考虑是要修改容器本身的&lt;code&gt;LANG&lt;/code&gt;&lt;br&gt;
可以直接进入容器然后类似：&lt;br&gt;
export LANG=C.UTF-8&lt;br&gt;
或者&lt;br&gt;
export LANG=en_US.UTF-8&lt;br&gt;
输入locale查看结果&lt;br&gt;
当然这样关了这个sh就没了，所以可以直接加到docker启动时的环境变量里&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://zihengcat.github.io/2018/09/10/change-locale-system-encoding-in-docker-container/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zihengcat.github.io/2018/09/10/change-locale-system-encoding-in-docker-container/&lt;/a&gt;&lt;br&gt;
然后你猜怎么着，做完这些设置以后中文依然显示为乱码，但是在FileZilla里看却没问题&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240618170337.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;现在高度怀疑是VScode的这个SFTP同步插件的锅&lt;/p&gt;
</description>
        </item>
        <item>
        <title>StableDiffusion大模型(Dreambooth)云上训练以及安装CODA指定版本</title>
        <link>http://localhost:1313/posts/240110_sd%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%BA%91%E4%B8%8A%E8%AE%AD%E7%BB%83/</link>
        <pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/240110_sd%E5%A4%A7%E6%A8%A1%E5%9E%8B%E4%BA%91%E4%B8%8A%E8%AE%AD%E7%BB%83/</guid>
        <description>&lt;h2 id=&#34;创建阿里云pai-dsw实例跑kohya&#34;&gt;创建阿里云PAI DSW实例跑kohya
&lt;/h2&gt;&lt;p&gt;镜像我这里选：&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240110174810.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
&lt;code&gt;dsw-registry-vpc.cn-shanghai.cr.aliyuncs.com/pai/modelscope:1.10.0-pytorch2.1.0tensorflow2.14.0-gpu-py310-cu118-ubuntu22.04&lt;/code&gt;&lt;br&gt;
我这里用默认的镜像，实测截至2024.01.10时，直接拉kohya的github可以直接用，不需要改动cuda之类的操作&lt;/p&gt;
&lt;h3 id=&#34;安装kohya_ss&#34;&gt;安装kohya_ss
&lt;/h3&gt;&lt;p&gt;kohya_ss仓库地址：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/bmaltais/kohya_ss&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/bmaltais/kohya_ss&lt;/a&gt;&lt;br&gt;
kohya_ss是个webui训练器，SD web_ui里也有对应的Dreambooth训练插件移植，如果只拿来训练不需要跑完整的sd webui服务，只需要kohya就可以了,kohay也可以练lora&lt;br&gt;
在workspace根目录直接：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/bmaltais/kohya_ss.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240110175054.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;很快就能完成，接着依次执行&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ./kohya_ss
apt update -y &amp;amp;&amp;amp; apt install -y python3-tk
chmod +x ./setup.sh
./setup.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;虽然镜像里带py310，但是似乎还是要装一下python3-tk&lt;br&gt;
之后安装脚本会自动完成，我大概花了5分钟&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240110193312.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
然后运行启动webui&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HF_ENDPOINT=https://hf-mirror.com ./gui.sh --headless
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240111114153.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
点击这个本地的IP即能点开webui了&lt;br&gt;
&lt;code&gt;HF_ENDPOINT=https://hf-mirror.com&lt;/code&gt;是为了防止抱脸会更新卡住而用的镜像网站（我确实因为这个卡过）或者见本站另一篇专门说代理的文章：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://winotmk.github.io/240109_Linux%E4%B8%8A%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://winotmk.github.io/240109_Linux%E4%B8%8A%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;kohya_ss的dreambooth训练参数&#34;&gt;kohya_ss的Dreambooth训练参数
&lt;/h2&gt;&lt;h3 id=&#34;source-model&#34;&gt;source model
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240111114635.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
我这里用自己上传的模型，可以先上传至阿里云oss再挂载进来，所以这里这样选，然后填模型路径就好了&lt;/p&gt;
&lt;h3 id=&#34;floders&#34;&gt;floders
&lt;/h3&gt;&lt;p&gt;这个tag里比较简单，没什么好说的&lt;br&gt;
Image folder里写上训练集目录，注意写上的目录底下应该是例如10_ABC目录，然后再放图和txt文件，这个10就step的10，和lora训练时候一样&lt;/p&gt;
&lt;h3 id=&#34;parameters&#34;&gt;parameters
&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240111115115.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;basic&#34;&gt;basic
&lt;/h4&gt;&lt;p&gt;和lora训练设置大同小异，但是参数要比lora小得多，因为Dreambooth比lora性能消耗要大得多而且非常容易过拟合，图出来一滩浆糊，比如我尝试epoch可能10以内就足够，由于文件比较大Save every N epochs我一般也就3-4，其他参数看个人需求吧&lt;/p&gt;
&lt;h4 id=&#34;samples&#34;&gt;samples
&lt;/h4&gt;&lt;p&gt;这里能填关键词和每多少轮出个预览图，玩玩用&lt;br&gt;
都准备好了就可以点 &lt;code&gt;start training&lt;/code&gt;，但webui不会有任何提示..要看之前启webui的终端&lt;br&gt;
这样就是开始训练了：&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240111121059.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
不过我第一次成功启动了webui但是点开始训练以后，报过类似这样的错：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The following directories listed in your path were found to be non-existent: {PosixPath(&#39;/usr/local/nvidia/lib64&#39;), PosixPath(&#39;/usr/local/nvidia/lib&#39;)}
/usr/local/lib/python3.10/dist-packages/bitsandbytes/cuda_setup/main.py:166: UserWarning: /usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda-11 did not contain [&#39;libcudart.so&#39;, &#39;libcudart.so.11.0&#39;, &#39;libcudart.so.12.0&#39;] as expected! Searching further paths...
  warn(msg)
The following directories listed in your path were found to be non-existent: {PosixPath(&#39;//license-pai.cn-shanghai.data.aliyun.com&#39;), PosixPath(&#39;http&#39;)}
The following directories listed in your path were found to be non-existent: {PosixPath(&#39;dsw-registry-vpc.cn-shanghai.cr.aliyuncs.com/cloud-dsw/eas-service&#39;), PosixPath(&#39;aigc-torch113-cu117-ubuntu22.04-v0.2.1&#39;)}
The following directories listed in your path were found to be non-existent: {PosixPath(&#39;http&#39;), PosixPath(&#39;8088/dsw-301739&#39;), PosixPath(&#39;//127.0.0.1&#39;)}
The following directories listed in your path were found to be non-existent: {PosixPath(&#39;Asia/Shanghai&#39;)}
The following directories listed in your path were found to be non-existent: {PosixPath(&#39;tcp&#39;), PosixPath(&#39;443&#39;), PosixPath(&#39;//10.192.0.1&#39;)}
The following directories listed in your path were found to be non-existent: {PosixPath(&#39;https&#39;), PosixPath(&#39;//dsw-cn-shanghai.data.aliyun.com&#39;)}
The following directories listed in your path were found to be non-existent: {PosixPath(&#39;tcp&#39;), PosixPath(&#39;443&#39;), PosixPath(&#39;//10.192.0.1&#39;)}
The following directories listed in your path were found to be non-existent: {PosixPath(&#39;/home/pai/bin/python&#39;)}
CUDA_SETUP: WARNING! libcudart.so not found in any environmental path. Searching in backup paths...
DEBUG: Possible options found for libcudart.so: {PosixPath(&#39;/usr/local/cuda/lib64/libcudart.so.11.0&#39;)}
CUDA SETUP: PyTorch settings found: CUDA_VERSION=118, Highest Compute Capability: 7.0.
CUDA SETUP: To manually override the PyTorch CUDA version please see:https://github.com/TimDettmers/bitsandbytes/blob/main/how_to_use_nonpytorch_cuda.md
/usr/local/lib/python3.10/dist-packages/bitsandbytes/cuda_setup/main.py:166: UserWarning: WARNING: Compute capability &amp;lt; 7.5 detected! Only slow 8-bit matmul is supported for your GPU!                     If you run into issues with 8-bit matmul, you can try 4-bit quantization: https://huggingface.co/blog/4bit-transformers-bitsandbytes
  warn(msg)
CUDA SETUP: Loading binary /usr/local/lib/python3.10/dist-packages/bitsandbytes/libbitsandbytes_cuda118_nocublaslt.so...
libcusparse.so.11: cannot open shared object file: No such file or directory
CUDA SETUP: Something unexpected happened. Please compile from source:
git clone https://github.com/TimDettmers/bitsandbytes.git
cd bitsandbytes
CUDA_VERSION=118 make cuda11x_nomatmul
python setup.py install
Traceback (most recent call last):
  File &amp;quot;/usr/lib/python3.10/runpy.py&amp;quot;, line 187, in _run_module_as_main
    mod_name, mod_spec, code = _get_module_details(mod_name, _Error)
  File &amp;quot;/usr/lib/python3.10/runpy.py&amp;quot;, line 146, in _get_module_details
    return _get_module_details(pkg_main_name, error)
  File &amp;quot;/usr/lib/python3.10/runpy.py&amp;quot;, line 110, in _get_module_details
    __import__(pkg_name)
  File &amp;quot;/usr/local/lib/python3.10/dist-packages/bitsandbytes/__init__.py&amp;quot;, line 6, in &amp;lt;module&amp;gt;
    from . import cuda_setup, utils, research
  File &amp;quot;/usr/local/lib/python3.10/dist-packages/bitsandbytes/research/__init__.py&amp;quot;, line 1, in &amp;lt;module&amp;gt;
    from . import nn
  File &amp;quot;/usr/local/lib/python3.10/dist-packages/bitsandbytes/research/nn/__init__.py&amp;quot;, line 1, in &amp;lt;module&amp;gt;
    from .modules import LinearFP8Mixed, LinearFP8Global
  File &amp;quot;/usr/local/lib/python3.10/dist-packages/bitsandbytes/research/nn/modules.py&amp;quot;, line 8, in &amp;lt;module&amp;gt;
    from bitsandbytes.optim import GlobalOptimManager
  File &amp;quot;/usr/local/lib/python3.10/dist-packages/bitsandbytes/optim/__init__.py&amp;quot;, line 6, in &amp;lt;module&amp;gt;
    from bitsandbytes.cextension import COMPILED_WITH_CUDA
  File &amp;quot;/usr/local/lib/python3.10/dist-packages/bitsandbytes/cextension.py&amp;quot;, line 20, in &amp;lt;module&amp;gt;
    raise RuntimeError(&#39;&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以及如果遇到类似：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Could not load dynamic library &#39;libcudart.so.11.0&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重新装适合的CUDA版本即可解决，如果要装CUDA：&lt;/p&gt;
&lt;h2 id=&#34;cuda相关&#34;&gt;CUDA相关
&lt;/h2&gt;&lt;h3 id=&#34;安装cuda指定版本&#34;&gt;安装CUDA指定版本
&lt;/h3&gt;&lt;p&gt;遇到过cuda版本不匹配的问题，记一下配置过程&lt;br&gt;
cuda下载：https://developer.nvidia.com/cuda-downloads&lt;br&gt;
但是有时候需要特定版本：https://developer.nvidia.com/cuda-toolkit-archive&lt;br&gt;
以11.8为例，系统是ubuntu22.04，所以这样选：&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240111133431.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
下载安装cuda：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /mnt/workspace
wget https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda_11.8.0_520.61.05_linux.run
sudo sh cuda_11.8.0_520.61.05_linux.run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;大约3-4GB左右，运行后需要等一会，会弹出交互界面&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240111135108.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
这里去掉安装驱动，因为我们已经有驱动了只是想要不同版本的cuda，然后选安装&lt;/p&gt;
&lt;p&gt;ps如果遇到装了多份驱动需要卸一个的情况：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/54928967e417&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.jianshu.com/p/54928967e417&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;装好以后他会提示：&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240111135653.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
需要往 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 和 &lt;code&gt;PATH&lt;/code&gt; 里添加两条环境变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.8/lib64
export PATH=$PATH:/usr/local/cuda-11.8/bin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;之后我使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python -m bitsandbytes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果没有报错应该就是好用的&lt;/p&gt;
&lt;p&gt;ps如果是windows上的wsl：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export LD_LIBRARY_PATH=/usr/lib/wsl/lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;切换cuda版本&#34;&gt;切换cuda版本
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.7
export BNB_CUDA_VERSION=117
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;改环境变量可以手动切换版本（当然得已经装了)&lt;/p&gt;
&lt;h3 id=&#34;查看cuda版本&#34;&gt;查看cuda版本
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;nvidia-smi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或者可以：&lt;br&gt;
参考：https://blog.csdn.net/Kefenggewu_/article/details/117675079&lt;br&gt;
默认cuda会装在&lt;code&gt;/usr/local&lt;/code&gt;,所以查看安装版本可以这样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ls -l /usr/local | grep cuda
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或者据说可以&lt;code&gt;nvcc -V # (V大写)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;本节另外的参考：https://github.com/TimDettmers/bitsandbytes/blob/main/how_to_use_nonpytorch_cuda.md&lt;/p&gt;
&lt;h2 id=&#34;链接&#34;&gt;链接
&lt;/h2&gt;&lt;p&gt;kohya_ss:&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/bmaltais/kohya_ss&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/bmaltais/kohya_ss&lt;/a&gt;&lt;br&gt;
一个封装好的kohya-docker的镜像&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/ashleykleynhans/kohya-docker&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/ashleykleynhans/kohya-docker&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dreambooth相关介绍：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://huggingface.co/docs/diffusers/training/dreambooth&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://huggingface.co/docs/diffusers/training/dreambooth&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/google/dreambooth&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/google/dreambooth&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Linux上的命令行代理工具</title>
        <link>http://localhost:1313/posts/240109_linux%E4%B8%8A%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7/</link>
        <pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/240109_linux%E4%B8%8A%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BB%A3%E7%90%86%E5%B7%A5%E5%85%B7/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240109144331.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;阿里云的AI白票试用还是很香的，b站顺便一搜有很多教程，跑个lora训练或者SD webui之类的&lt;br&gt;
但难免会遇到要拉更新之类的情况，github和huggingface.co速度慢或者连不上去也经常遇到，除了使用镜像站以外，还有可以使用代理来加速&lt;/p&gt;
&lt;h2 id=&#34;先通socks5&#34;&gt;先通SOCKS5！
&lt;/h2&gt;&lt;h3 id=&#34;安装ss&#34;&gt;安装ss
&lt;/h3&gt;&lt;p&gt;先贴上需要用到的软件github：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/shadowsocks/shadowsocks-libev&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/shadowsocks/shadowsocks-libev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以及大概解释了什么是ss2，ss-go，ss-libev&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://shadowsocks5.github.io/en/spec/Implementations.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://shadowsocks5.github.io/en/spec/Implementations.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在云端实例命令行下，需要个尽可能简洁小巧又好用的工具，ss-libev可能会是我们的首选，ss-libev是一个轻量级安全 SOCKS5 代理，适用于嵌入式设备和低端设备，用纯 C 编写，体积小巧比较高效&lt;br&gt;
我的云计算镜像是基于ubuntu22.04的&lt;br&gt;
要安装它，直接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt install shadowsocks-libev
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;配置ss&#34;&gt;配置ss
&lt;/h3&gt;&lt;p&gt;然后编辑设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Edit the configuration file
sudo vim /etc/shadowsocks-libev/config.json
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- more --&gt;
&lt;p&gt;在&lt;code&gt;config.json&lt;/code&gt;里&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;server&amp;quot;:&amp;quot;my_server_ip&amp;quot;,
    &amp;quot;mode&amp;quot;:&amp;quot;tcp_and_udp&amp;quot;,
    &amp;quot;server_port&amp;quot;:8388,
    &amp;quot;local_port&amp;quot;:1080,
    &amp;quot;password&amp;quot;:&amp;quot;barfoo!&amp;quot;,
    &amp;quot;timeout&amp;quot;:600,
    &amp;quot;method&amp;quot;:&amp;quot;chacha20-ietf-poly1305&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;server&lt;/code&gt; :您的主机名或服务器 IP (IPv4/IPv6)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mode&lt;/code&gt; :模式一般不动&lt;/li&gt;
&lt;li&gt;&lt;code&gt;server_port&lt;/code&gt; :服务器端口号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local_port&lt;/code&gt; :本地端口号，一般默认就1080&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password&lt;/code&gt; :密码&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timeout&lt;/code&gt; :连接超时（以秒为单位）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;method&lt;/code&gt; :加密算法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些信息只要你找的代理供应商支持ss协议应该都可以拿到&lt;/p&gt;
&lt;p&gt;ps顺便给同学们复习下vim，懒得用vim的可以不看，按&lt;code&gt;a&lt;/code&gt;进入编辑模式，方向键移动光标，编辑完成后按两下 &lt;code&gt;ctrl+c&lt;/code&gt; 进入指令模式然后&lt;code&gt;:wq!&lt;/code&gt;保存更改并退出,如果直接退出不保存是&lt;code&gt;:q!&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;启动ss客户端&#34;&gt;启动ss客户端
&lt;/h3&gt;&lt;p&gt;任意目录输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ss-local
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;即可做为客户端启动&lt;br&gt;
这里我启动成功以后显示：&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240109150557.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;ps这个软件可以以服务端启动，同样也是修改上面的&lt;code&gt;etc/shadowsocks-libev/config.json&lt;/code&gt;,这里挺容易混淆啊，我这里的目标是想给我的云上GPU计算实例代理加速，所以以客户端启动就行&lt;br&gt;
如果要以服务端启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl start shadowsocks-libev.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;systemctl如果云上镜像里没有（大概率没有，容器镜像谁会带systemctl或者systemd呢~），可以尝试&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/shadowsocks-libev start
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装proxychains使软件走代理&#34;&gt;安装proxychains使软件走代理
&lt;/h2&gt;&lt;p&gt;上面只做到了客户端使用SOCKS5打通代理，接下来再用另外一个软件使我们指定的命令/app走这条SOCKS5线路，也就是需要个SOCKS5转HTTP的工具来为我们所用&lt;br&gt;
这里发现了proxychains&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ProxyChains 是一个强制应用的 TCP 连接通过代理的工具，支持 Tor、HTTP、与 Socks 代理。ProxyChains 只会将当前应用的 TCP 连接转发至代理，而非全局代理。&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;安装proxychains&#34;&gt;安装proxychains
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;sudo apt install proxychains
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;超快就安装好了&lt;/p&gt;
&lt;h3 id=&#34;配置&#34;&gt;配置
&lt;/h3&gt;&lt;pre&gt;&lt;code&gt; vim /etc/proxychains.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[ProxyList]
# add proxy here ...
# meanwile
# defaults set to &amp;quot;tor&amp;quot;
#socks4    127.0.0.1 9050

# example
socks5  127.0.0.1 1080
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用&#34;&gt;使用
&lt;/h3&gt;&lt;p&gt;ProxyChains 的使用方式非常简单，直接在应用程序前加上 proxychains 即可&lt;br&gt;
例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;proxychains git clone https://github.com/rofl0r/proxychains-ng
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但是据说ping是不行的，因为pin并不是TCP而是ICMP，所以可以尝试&lt;code&gt;proxychains ping google.com&lt;/code&gt;,总之我是能解析出IP但是会卡住ping不了，问题不大&lt;/p&gt;
&lt;p&gt;试试看是不是通了：&lt;br&gt;
先试试&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl cip.cc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;得到&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20240109152134.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我们加上proxychains以后&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;proxychains curl cip.cc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20240109152400.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;看！效果立竿见影，而且可以灵活使用&lt;/p&gt;
&lt;p&gt;另外一种方法或许可以不装proxychains&lt;br&gt;
直接设置变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export http_proxy=&amp;quot;socks5://127.0.0.1:1080&amp;quot;
export https_proxy=&amp;quot;socks5://127.0.0.1:1080&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可能也可以但没试过&lt;/p&gt;
&lt;h2 id=&#34;其他一些镜像方案&#34;&gt;其他一些镜像方案：
&lt;/h2&gt;&lt;h3 id=&#34;huggingface&#34;&gt;huggingface
&lt;/h3&gt;&lt;p&gt;运行python时前加&lt;code&gt;HF_ENDPOINT=https://hf-mirror.com&lt;/code&gt;，这样就可以实现后续走镜像加速了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HF_ENDPOINT=https://hf-mirror.com python your_script.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;详细用法：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://hf-mirror.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://hf-mirror.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;github&#34;&gt;github
&lt;/h3&gt;&lt;p&gt;示例用法，直接github域名前加&lt;code&gt;https://mirror.ghproxy.com/&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://mirror.ghproxy.com/https://github.com/d8ahazard/sd_dreambooth_extension
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;详细见：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://mirror.ghproxy.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mirror.ghproxy.com/&lt;/a&gt;&lt;br&gt;
有些部署文件里还是用的之前的域名&lt;code&gt;https://ghproxy.com/&lt;/code&gt;,已失效，改用二级域名&lt;code&gt;https://mirror.ghproxy.com/&lt;/code&gt;即可&lt;/p&gt;
&lt;h2 id=&#34;附录&#34;&gt;附录
&lt;/h2&gt;&lt;h3 id=&#34;本文参考文章&#34;&gt;本文参考文章
&lt;/h3&gt;&lt;p&gt;linux命令行代理神器-proxychains&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/166375631&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zhuanlan.zhihu.com/p/166375631&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Linux 让终端走代理的几种方法&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/46973701&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zhuanlan.zhihu.com/p/46973701&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ss服务端和客户端安装&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://mkmerich.com/2018-09-23/shadowsocks%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%92%8C%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%89%E8%A3%85.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://mkmerich.com/2018-09-23/shadowsocks%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%92%8C%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%AE%89%E8%A3%85.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;基本概念,什么是ss什么是socks5&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://reezon.github.io/2018/05/23/%E5%85%B3%E4%BA%8Ess%28%E9%85%B8%E9%85%B8%29%E5%92%8Cssr%28%E9%85%B8%E9%85%B8%E4%B9%B3%29%EF%BC%8C%E8%BF%98%E6%9C%89vpn%E5%92%8Csocks5/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://reezon.github.io/2018/05/23/%E5%85%B3%E4%BA%8Ess(%E9%85%B8%E9%85%B8)%E5%92%8Cssr(%E9%85%B8%E9%85%B8%E4%B9%B3)%EF%BC%8C%E8%BF%98%E6%9C%89vpn%E5%92%8Csocks5/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用Curl时可以直接用socks5&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.emacsos.com/use-socks5-proxy-in-curl.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.emacsos.com/use-socks5-proxy-in-curl.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;其他类似方案软件&#34;&gt;其他类似方案软件
&lt;/h3&gt;&lt;p&gt;sshuttle&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/sshuttle/sshuttle&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/sshuttle/sshuttle&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;yuhaiin&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/yuhaiin/yuhaiin&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/yuhaiin/yuhaiin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;clash-verge&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/zzzgydi/clash-verge&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/zzzgydi/clash-verge&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>ArchLinux命令集</title>
        <link>http://localhost:1313/posts/archlinux%E5%91%BD%E4%BB%A4/</link>
        <pubDate>Sun, 24 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/archlinux%E5%91%BD%E4%BB%A4/</guid>
        <description>&lt;p&gt;刚装完archlinux后ifconfig无法使用?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# pacman -S net-tools dnsutils inetutils iproute2
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;archlinux开启ssh服务命令&#34;&gt;Archlinux开启ssh服务命令：
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# systemctl enable sshd.service  开机启动

# systemctl start sshd.service     立即启动

# systemctl restart sshd.service   立即重启
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;关于systemctl&#34;&gt;关于systemctl:
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/title/Systemd_%28%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.archlinux.org/title/Systemd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;比如：关闭开机启用KDE桌面环境&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;# systemctl disable sddm
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;切换到root用户&#34;&gt;切换到root用户：
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# su
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- more --&gt;
&lt;hr&gt;
&lt;p&gt;以下无用，应该是旧版本PuTTY密钥算法支持有限，请更新PuTTY。。&lt;/p&gt;
&lt;p&gt;用PuTTY登录报错：&lt;/p&gt;
&lt;p&gt;couldn&amp;rsquo;t agree a host key algorithm&lt;/p&gt;
&lt;p&gt;解决，生成密钥：（出处：&lt;a class=&#34;link&#34; href=&#34;https://forums.centos.org/viewtopic.php?t=52892&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://forums.centos.org/viewtopic.php?t=52892&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# cd /etc/ssh
# ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key
# vi /etc/ssh/sshd_config
Uncomment this line:
# HostKey /etc/ssh/ssh_host_dsa_key
# chgrp ssh_keys ssh_host_dsa_key
# service sshd restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果putty连接报Network error:connection refused&lt;br&gt;
关闭防火墙&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# systemctl start iptables
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&#34;安装jre环境&#34;&gt;安装jre环境
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# pacman -S jre8-openjdk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;高版本mc需要高JDK&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# pacman -S jre17-openjdk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;切换java版本&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# sudo archlinux-java set java-17-openjdk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看java状态&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# java -version
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;启动一个mc服务器&#34;&gt;启动一个mc服务器
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://cloud.tencent.com/developer/article/1622545&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cloud.tencent.com/developer/article/1622545&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# java -Xms1024MB -Xmx2048MB -jar iserver.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置中文环境&#34;&gt;设置中文环境
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# vim /etc/locale.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;增加以下内容&lt;br&gt;
LANG=zh_CN.UTF-8&lt;/p&gt;
&lt;p&gt;下次重新登录就是中文啦。可以输入date查看日期，如果显示中文，就说明设置正常啦&lt;/p&gt;
&lt;h3 id=&#34;关于linux任务前后台处理&#34;&gt;关于linux任务前后台处理：
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/timonium/article/details/116245621&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/timonium/article/details/116245621&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/xiaoleiel/p/8349675.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/xiaoleiel/p/8349675.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;正在前台运行的命令暂停且放到后台：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# Ctrl+z
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# jobs ## 查看后台进程编号
# jobs -l ##查看进程PID，可以配合kill干掉进程
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;bg在后台继续执行，fg调回前台执行&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# bg [作业编号]
# fg [作业编号]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一开始就后台执行：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/linnuo/p/9084125.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/linnuo/p/9084125.html&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# java -jar shareniu.jar &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;amp;代表在后台运行&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# nohup java -jar shareniu.jar &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;nohup 意思是不挂断运行命令,当账户退出或终端关闭时,程序仍然运行&lt;br&gt;
当用 nohup 命令执行作业时，缺省情况下该作业的所有输出被重定向到nohup.out的文件中，除非另外指定了输出文件。&lt;/p&gt;
&lt;p&gt;ps：我觉得上面的后台操作不好用不如试试Screen&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/han0373/article/details/81352663&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/han0373/article/details/81352663&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;screen -S yourname -&amp;gt; 新建一个叫yourname的session&lt;br&gt;
screen -ls         -&amp;gt; 列出当前所有的session&lt;br&gt;
screen -r yourname -&amp;gt; 回到yourname这个session&lt;br&gt;
screen -d yourname -&amp;gt; 远程detach某个session&lt;br&gt;
screen -d -r yourname -&amp;gt; 结束当前session并回到yourname这个session&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;回到MCSManager的面板&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# screen -r mcsm
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;看进程&#34;&gt;看进程
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;# ps aux
或者
# top
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;压缩&#34;&gt;压缩
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/59d93f942506&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.jianshu.com/p/59d93f942506&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;01-.tar格式
解包：# tar xvf FileName.tar
打包：# tar cvf FileName.tar DirName（注：tar是打包，不是压缩！）
02-.gz格式
解压1：# gunzip FileName.gz
解压2：# gzip -d FileName.gz
压 缩：# gzip FileName

03-.tar.gz格式
解压：# tar zxvf FileName.tar.gz
压缩：# tar zcvf FileName.tar.gz DirName
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        <item>
        <title>linux文件和目录权限</title>
        <link>http://localhost:1313/posts/linux%E6%9D%83%E9%99%90/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/linux%E6%9D%83%E9%99%90/</guid>
        <description>&lt;p&gt;*本文摘录整理为主&lt;/p&gt;
&lt;p&gt;用&lt;code&gt;ls -l&lt;/code&gt;查看权限：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;文件属性     文件数    拥有者   所属的group    文件大小    建档日期        文件名　　
drwx--x--x   1      root       wheel       6872    2  7 22:41     compressedPackage/
drwxr-xr-x   1      liuml      wheel       8620    2 15 09:32     wwwroot/　　
lrwxrwxrwx   1      liuml      wheel       46      2 24 19:30     abc@ -&amp;gt; home/abc
-rwxr-xr-x   1      liuml      wheel       68568   2 29 07:43     test*　　
 
- 文件名栏位 文件后面的符号含义  
	- / ：表明是一个目录
	- @ ：表明是到其它文件的符号链接
	- * ：表明是一个可执行文件。

- 对于权限设置的解释
	- r 是读，w 是写，x 是执行

	- 对应数字如下:
		- r = 4    w = 2    x = 1
		- rwx ：4+2+1 = 7
		- rw- ：4+2 = 6
		- r-x ：4+1 = 5
		- drwxr-xr-x ：755

- 第 0-1位   文件类型
	- “-” ：表示普通文件；
	- “d” ：表示目录；
	- “l” ：表示链接文件；
	- “p” ：表示管理文件；
	- “b” ：表示块设备文件；
	- “c” ：表示字符设备文件；
	- “s” ：表示套接字文件；

- 第 2-4位   文件所有者权限 [User]

- 第 5-7位   文件所有者所在组权限 [Group]

- 第 8-10位  其他用户权限 [Others]

- 没有的权限用 “-” 来表示
————————————————
版权声明：本文为CSDN博主「烟雨弥漫了江南」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/u010324331/article/details/88035175/
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- more --&gt;
&lt;p&gt;{% asset_img 20211012_231624_2018091016360849.png 800 %}&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/zhuoya_/article/details/77418413&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/zhuoya_/article/details/77418413&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;共显示了七列信息，从左至右依次为：权限、文件数、归属用户、归属群组、文件大小、创建日期、文件名称&lt;br&gt;
d ：第一位表示文件类型&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;第一位字符&lt;/th&gt;
          &lt;th&gt;文件类型&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;d&lt;/td&gt;
          &lt;td&gt;文件夹&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;-&lt;/td&gt;
          &lt;td&gt;普通文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;l&lt;/td&gt;
          &lt;td&gt;链接&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;b&lt;/td&gt;
          &lt;td&gt;块设备文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;p&lt;/td&gt;
          &lt;td&gt;管道文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;c&lt;/td&gt;
          &lt;td&gt;字符设备文件&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;s&lt;/td&gt;
          &lt;td&gt;套接口文件&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;rxw和数值权限的对应：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;rxw&lt;/th&gt;
          &lt;th&gt;数值&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;r(读)&lt;/td&gt;
          &lt;td&gt;4&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;w(写)&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;x(执行)&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;所以，例如：&lt;br&gt;
rwx rw- r&amp;ndash;&lt;br&gt;
7    6    4&lt;br&gt;
三个一组,rwx权限分别对应421相加得7,rw-对应42相加,r&amp;ndash;对应4&lt;/p&gt;
&lt;p&gt;{% asset_img 20211012_232003_20180910175047158.gif 500 %}&lt;/p&gt;
&lt;p&gt;图片来源：&lt;a class=&#34;link&#34; href=&#34;http://man.linuxde.net/chmod&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://man.linuxde.net/chmod&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;举例：-rw-r&amp;ndash;r&amp;ndash;，即为644权限&lt;br&gt;
6对应4+2   rw-&lt;br&gt;
4对应   r&amp;ndash;&lt;br&gt;
那么这个文件的权限就是所有者rw-,所属组r&amp;ndash;,其他人r&amp;ndash;&lt;/p&gt;
&lt;p&gt;常用的linux权限对应：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;数值&lt;/th&gt;
          &lt;th&gt;rxw&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;444&lt;/td&gt;
          &lt;td&gt;r&amp;ndash;r&amp;ndash;r&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;600&lt;/td&gt;
          &lt;td&gt;rw&amp;mdash;&amp;mdash;-&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;644&lt;/td&gt;
          &lt;td&gt;rw-r&amp;ndash;r&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;666&lt;/td&gt;
          &lt;td&gt;rw-rw-rw-&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;700&lt;/td&gt;
          &lt;td&gt;rwx&amp;mdash;&amp;mdash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;744&lt;/td&gt;
          &lt;td&gt;rwxr&amp;ndash;r&amp;ndash;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;755&lt;/td&gt;
          &lt;td&gt;rwxr-xr-x&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;777&lt;/td&gt;
          &lt;td&gt;rwxrwxrwx&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;命令修改权限&#34;&gt;命令修改权限
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;权限管理命令chmod&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;修改文件或者目录的权限&lt;br&gt;
全拼: change permissions mode of a file&lt;br&gt;
语法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod [{ugoa}{+-=}{rwx}] [文件或目录]
[mode=421] [文件或目录]
-R 递归修改

u:所有者, g:所属组,o:其他人,a:所有;
+:添加权限,-减少权限,=直接赋值成这个权限
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;strong&gt;创建目录mkdir时加权限&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;$ mkdir -m=r-- letter
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上面的命令会创建一个名为 letter 的目录，同时为&lt;strong&gt;目录所有者、用户组和其他用户&lt;/strong&gt; 针对该目录赋予&lt;strong&gt;只读权限&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;mkdir命令小参考：&lt;a class=&#34;link&#34; href=&#34;https://linux.cn/article-2713-1.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;在 Linux 下用 mkdir 命令来创建目录和子目录&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考：
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/tianchao/p/11821556.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;linux权限drwxrwxrwx所代表的意义&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/u010324331/article/details/88035175/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;linux ls -l命令显示详解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/ken1583096683/article/details/82594037&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;linux更改文件(夹)权限或所有者&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jingyan.baidu.com/article/4853e1e5413b541909f72632.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux 文件权限查看及修改&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>安装ArchLinux系统（详细过程）</title>
        <link>http://localhost:1313/posts/%E5%AE%89%E8%A3%85arch/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/%E5%AE%89%E8%A3%85arch/</guid>
        <description>&lt;p&gt;参考文章：&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/138951848&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://zhuanlan.zhihu.com/p/138951848&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官方WIKI安装指南（上文和本文大致流程基于此）：&lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/title/Installation_guide&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://wiki.archlinux.org/title/Installation_guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;家里旧笔记本淘汰装个Linux跑跑服务发挥余热，&lt;br&gt;
这里是彻底格式化硬盘新安装，而不需要多系统引导&lt;/p&gt;
&lt;p&gt;我的环境有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2核  Intel(R) Pentium(R) CPU 997 @ 1.60GHz&lt;/li&gt;
&lt;li&gt;4GB 1600内存&lt;/li&gt;
&lt;li&gt;UEFI启动（不能为BIOS）&lt;/li&gt;
&lt;li&gt;Samsang 850 EVO 250G 2.5寸SATA接口&lt;/li&gt;
&lt;li&gt;无线网卡拆掉了，用得是网线&lt;/li&gt;
&lt;li&gt;路由器上全局梯子（所以我没有换源，用官方源速度足够了）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;准备镜像&#34;&gt;准备镜像
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://archlinux.org/download/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://archlinux.org/download/&lt;/a&gt;&lt;br&gt;
下载发行版的Linux的ISO&lt;br&gt;
然后制作U盘启动，我是在mac下用balenaEtcher做的，操作非常方便&lt;/p&gt;
&lt;p&gt;{% asset_img 20211024_224012.png 800 %}&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;然后重启电脑从U盘启动&lt;/p&gt;
&lt;h2 id=&#34;硬盘准备&#34;&gt;硬盘准备
&lt;/h2&gt;&lt;p&gt;进入U盘系统后先连pacman试试&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;pacman -Syyy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;{% asset_img 20211024_224554_v2-da5d5bc2996a7b6990673c4c4700d77a_1440w.png 800 %}&lt;/p&gt;
&lt;h3 id=&#34;检查硬盘&#34;&gt;检查硬盘
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;lsblk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;{% asset_img 20211024_231805.png 500 %}&lt;/p&gt;
&lt;h3 id=&#34;建立分区&#34;&gt;建立分区
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;cfdisk /dev/sda
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;选择New 回车，然后&lt;br&gt;
选择Write 回车 输入 yes 回车&lt;br&gt;
写入完成 选择Quit 回车退出&lt;/p&gt;
&lt;h3 id=&#34;格式化&#34;&gt;格式化
&lt;/h3&gt;&lt;p&gt;将刚刚分好的区格式化为ext4格式，这里认准分区号sda1&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;mkfs.ext4 /dev/sda1
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;挂载分区&#34;&gt;挂载分区
&lt;/h3&gt;&lt;p&gt;sda1&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;mount /dev/sda1 /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装系统&#34;&gt;安装系统
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;pacstrap /mnt base linux linux-firmware nano
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;生成fstab文件&#34;&gt;生成fstab文件
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;检查生成的fstab文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;cat /mnt/etc/fstab
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;配置新系统&#34;&gt;配置新系统
&lt;/h2&gt;&lt;h3 id=&#34;切换到装好的系统&#34;&gt;切换到装好的系统
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;arch-chroot /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置时区&#34;&gt;设置时区
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置locale&#34;&gt;设置locale
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;nano /etc/locale.gen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ctrl+W 输入 #en_US 回车 找到UTF-8那一行 删掉前面的#&lt;/p&gt;
&lt;p&gt;Ctrl+W 输入 #zh_CN 回车 找到UTF-8那一行 删掉前面的#&lt;br&gt;
Ctrl+X 然后Y保存退出&lt;br&gt;
生成locale&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;locale-gen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;创建并写入/etc/locale.conf文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;nano /etc/locale.conf 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;填入内容，注意这里只能填这个&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;LANG=en_US.UTF-8
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;创建并写入hostname&#34;&gt;创建并写入hostname
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;nano /etc/hostname
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我这里名字叫WinArch&lt;br&gt;
保存退出&lt;/p&gt;
&lt;h3 id=&#34;修改hosts&#34;&gt;修改hosts
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;nano /etc/hosts
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;写入内容如图（中间的空白用tab而非空格），arch替换为你之前在hostname里写入的内容，其他都按照图里面的写（注意最后一行的ip是127.0.1.1）&lt;/p&gt;
&lt;p&gt;{% asset_img 20211024_234039_v2-54fc38004dc15b76d68983a78e59928a_r.jpg 800 %}&lt;/p&gt;
&lt;p&gt;保存退出&lt;/p&gt;
&lt;p&gt;建议上述编辑的内容都用cat输出检查一下&lt;/p&gt;
&lt;h3 id=&#34;root用户创建密码&#34;&gt;root用户创建密码
&lt;/h3&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;passwd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后输入并确认密码&lt;/p&gt;
&lt;h3 id=&#34;装启动器和一些软件&#34;&gt;装启动器和一些软件
&lt;/h3&gt;&lt;p&gt;包含了一些常用到的软件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;pacman -S grub efibootmgr networkmanager network-manager-applet dialog wireless_tools wpa_supplicant os-prober mtools dosfstools ntfs-3g base-devel linux-headers reflector git sudo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;intel的cpu，需要安装intel的微码文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;pacman -S intel-ucode
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成之后输入&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;grub-install /dev/sda
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意是硬盘位置不是分区位置，硬盘上也只有刚刚安装的Arch系统&lt;/p&gt;
&lt;p&gt;生成grub.cfg&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;grub-mkconfig -o /boot/grub/grub.cfg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;出现吧啦吧啦done就完成了&lt;/p&gt;
&lt;h2 id=&#34;退出新系统重启&#34;&gt;退出新系统重启
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;exit
reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不装桌面环境的话，到这步即可使用了，后续需要什么再装不迟&lt;/p&gt;
&lt;h2 id=&#34;新建用户并授权&#34;&gt;新建用户并授权
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;useradd -m -G wheel winotmk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我的用户是winotkm，这里主要是创建一个非root的账户，桌面环境一般无法用root登陆的&lt;br&gt;
创建密码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;passwd winotmk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;授权&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;EDITOR=nano visudo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ctrl+W 输入 # %wheel 回车 找到这行 删除前面的 #（取消注释）&lt;/p&gt;
&lt;h2 id=&#34;安装display-server和display-manager&#34;&gt;安装Display Server和Display Manager
&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;pacman -S xorg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后我喜欢KDE桌面，所以装：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;pacman -S sddm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置开机启动&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;systemctl enable sddm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;PS.取消开机启动是&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;systemctl disable sddm
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装desktop-environment&#34;&gt;安装Desktop Environment
&lt;/h2&gt;&lt;p&gt;KDE：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;pacman -S plasma kde-applications packagekit-qt5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装中文的字体&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;pacman -S noto-fonts-cjk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;好了，大功告成&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Shell&#34;&gt;reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;{% asset_img 20211025_000315_87B60562-6700-4593-B70A-F543B38B30E5_1_105_c.jpeg 800 %}&lt;/p&gt;
</description>
        </item>
        <item>
        <title>流量异常排查</title>
        <link>http://localhost:1313/posts/%E6%B5%81%E9%87%8F%E5%BC%82%E5%B8%B8%E6%8E%92%E6%9F%A5/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/%E6%B5%81%E9%87%8F%E5%BC%82%E5%B8%B8%E6%8E%92%E6%9F%A5/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20230618000510.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
挖个坑。。。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>生成秘钥连接至github————用来推hexo</title>
        <link>http://localhost:1313/posts/%E7%94%9F%E6%88%90%E7%A7%98%E9%92%A5%E8%BF%9E%E6%8E%A5%E8%87%B3github_%E7%94%A8%E6%9D%A5%E6%8E%A8hexo/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/%E7%94%9F%E6%88%90%E7%A7%98%E9%92%A5%E8%BF%9E%E6%8E%A5%E8%87%B3github_%E7%94%A8%E6%9D%A5%E6%8E%A8hexo/</guid>
        <description>&lt;h2 id=&#34;生成秘钥&#34;&gt;生成秘钥
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;ssh-keygen -t ed25519 -C &amp;quot;550330147@qq.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;邮箱自然是我的git注册邮箱&lt;/p&gt;
&lt;h2 id=&#34;如果修改passphrade密码&#34;&gt;如果修改passphrade密码
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;ssh-keygen -p -f ~/.ssh/id_ed25519
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;直接enter即密码为空，这是秘钥的密码&lt;/p&gt;
&lt;h2 id=&#34;复制秘钥到github&#34;&gt;复制秘钥到github
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20230618002355.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
打开/root/.ssh/id_ed25519.pub&lt;br&gt;
复制到这里&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20230618002554.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/settings/ssh/new&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/settings/ssh/new&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PS官方已不推荐用rsa加密&lt;/p&gt;
&lt;h2 id=&#34;测试&#34;&gt;测试
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20230618003332.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
这里输入yes&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20230618003428.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
成功！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>树莓派路由器</title>
        <link>http://localhost:1313/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B7%AF%E7%94%B1%E5%99%A8/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%B7%AF%E7%94%B1%E5%99%A8/</guid>
        <description>&lt;h2 id=&#34;树莓派cm4的&#34;&gt;树莓派CM4的
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20230614212800.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;openwrt-web界面安装中文&#34;&gt;openWrt web界面安装中文
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/da01ce070688&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.jianshu.com/p/da01ce070688&lt;/a&gt;&lt;br&gt;
更新包目录：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;opkg update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里一开始我不行，ping1.1.1.1和ping8.8.8.8都ping不通，然后忽然想起自己的科学梯子路由网关是192.168.50.4&lt;br&gt;
改之!!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20230614001635.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可能还不行&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20230617224422.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
这俩防火墙设置一下&lt;/p&gt;
&lt;p&gt;如果还不行&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20230617231305.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
DNS记得指定一下&lt;/p&gt;
&lt;p&gt;这下就能通了&lt;/p&gt;
&lt;p&gt;PS也可以点配置opkg，然后加一条&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;src/gz openwrt_packages https://mirrors.ustc.edu.cn/openwrt/releases/22.03.5/packages/aarch64_cortex-a72/packages/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;把源换为国内&lt;/p&gt;
&lt;p&gt;然后&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;opkg install luci-i18n-base-zh-cn
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;提示&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;Configuring luci-i18n-base-zh-cn
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再回来看web界面就已经是中文了&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20230614001825.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;如果要开启sftp传输服务&#34;&gt;如果要开启sftp传输服务
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/twn39/code/issues/279&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/twn39/code/issues/279&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;开启sftp的话可以很方便用WinSCP登录，文件管理神器&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20230614002052.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
那么如何启用 sftp 服务呢？先安装对应的软件：&lt;/p&gt;
&lt;p&gt;opkg install vsftpd openssh-sftp-server&lt;br&gt;
设置系统开启后自动启动 sftp 服务：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;/etc/init.d/vsftpd enable
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;启动 sftp 服务：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt; /etc/init.d/vsftpd start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这样 Openwrt 就已经启用了 sftp 服务了，可以使用客户端进行文件的传输。&lt;/p&gt;
&lt;h2 id=&#34;装网卡驱动&#34;&gt;装网卡驱动
&lt;/h2&gt;&lt;p&gt;我的CM4拓展板子是微雪的这个&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20230617234921.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.waveshare.net/wiki/CM4-DUAL-ETH-MINI&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.waveshare.net/wiki/CM4-DUAL-ETH-MINI&lt;/a&gt;&lt;br&gt;
有两个网口ETH0是原生ETH1是PCIe转出来的，需要安装RTL8111H芯片的网卡驱动，查了一下软件包里是有的&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/packages/pkgdata/kmod-r8169&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://openwrt.org/packages/pkgdata/kmod-r8169&lt;/a&gt;&lt;br&gt;
那么就好办了&lt;br&gt;
安装就行了：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt; opkg install kmod-r8169
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完成以重启openwrt我们看到这里已经读到了eth1口&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20230614003210.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;设置路由器wan口&#34;&gt;设置路由器WAN口
&lt;/h2&gt;&lt;p&gt;添加新端口，设备选装好驱动以后出现的eth1，协议我选pppoe因为我拿路由拨号&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20230614003850.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;如果要自己加安装包&#34;&gt;如果要自己加安装包：
&lt;/h2&gt;&lt;p&gt;放到一个tmp目录里&lt;br&gt;
CD到tmp目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;opkg install *.ipk
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;关于扩容挂载点&#34;&gt;关于扩容挂载点
&lt;/h2&gt;&lt;p&gt;参考资料：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/e83459242afb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.jianshu.com/p/e83459242afb&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/ls0111/article/details/128769859&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/ls0111/article/details/128769859&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PS我选的是树莓派cpu对应的ext4文件系统的固件，SQUASHFS就不碰了不熟悉&lt;br&gt;
首先安装安装cfdisk，注意这里要先更新下opkg&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;opkg update
opkg install cfdisk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后打开cfdisk&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cfdisk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但是我打不开&lt;br&gt;
比如我的这块硬盘是内置EMMC硬盘, 显示名称是/dev/mmcblk0.&lt;br&gt;
一般的内置硬盘应该是/dev/sda之类的.&lt;/p&gt;
&lt;p&gt;使用cfdisk命令，进入分区页面&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cfdisk /dev/mmcblk0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果普通是内置硬盘&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;cfdisk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20230617234233.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
按照参考资料中的教程一路继续&lt;br&gt;
做到格式化新分区就可以了，注意mmcblk0p3要替换成自己的盘符&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkfs.ext4 /dev/mmcblk0p3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fdisk -l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;df -h
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;命令，查看是否成功创建新分区。&lt;/p&gt;
&lt;p&gt;然后在Luci web界面里面增加挂载点：&lt;br&gt;
我是直接从OpenWrt官网下的，不是修改版，所以木有这个选项。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;opkg update
opkg install block-mount
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启路由，界面会有挂载点出现，进入&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20230614222923.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;挂载刚才格式化的硬盘以后&lt;br&gt;
&lt;img src=&#34;http://localhost:1313/images/20230614223908.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;复制这段&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;mkdir -p /tmp/introot
mkdir -p /tmp/extroot
mount --bind / /tmp/introot
mount /dev/sda1 /tmp/extroot
tar -C /tmp/introot -cvf - . | tar -C /tmp/extroot -xf -
umount /tmp/introot
umount /tmp/extroot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中的&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mount /dev/sda1 /tmp/extroot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;要改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mount /dev/mmcblk0p3 /tmp/extroot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/images/20230617234310.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;br&gt;
满血了！！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>树莓派上架设TimeMachine服务</title>
        <link>http://localhost:1313/posts/%E6%A0%91%E8%8E%93%E6%B4%BEtimemachine/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/posts/%E6%A0%91%E8%8E%93%E6%B4%BEtimemachine/</guid>
        <description>&lt;p&gt;{% asset_img 20211013_002640.png 800 %}&lt;/p&gt;
&lt;h2 id=&#34;命令&#34;&gt;命令
&lt;/h2&gt;&lt;p&gt;前半参考：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/335259509&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;从此Mac上的文件再也不会丟了&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;后半参考：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/d9b180f6d397&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何自己搭建一个Time Machine服务器&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;挂载硬盘目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo mount /dev/sda2 /mnt/WinSource
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1.安装netatalk和avahi（自己感觉avahi不装也行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install netatalk avahi-daemon -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2.创建账户wintm来访问TimeMachine，&lt;strong&gt;至少别用root，root访问不能！&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;useradd -c &amp;quot;Time machine&amp;quot; -m -s /bin/bash wintm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后设置密码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo passwd wintm
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- more --&gt;
&lt;p&gt;3.配置netatalk&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /etc/netatalk/AppleVolumes.default
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个文件似乎一行代表一个服务&lt;br&gt;
可以在&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# The line below sets some DEFAULT, starting with Netatalk 2.1.
:DEFAULT: options:upriv,usedots

# By default all users have access to their home directories.
~/			&amp;quot;Home Directory&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下面加上一行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/mnt/WinSource/TimeMachine WinMachine allow:wintm options:tm
#挂在硬盘里的文件夹           afp服务名   允许wintm用户登陆   开启timemachine
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4.重启服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service netatalk restart
sudo service avahi-daemon restart
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;一些坑&#34;&gt;一些坑
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;试图直接使用root账户连接，在这里卡了很久，还尝试在&lt;strong&gt;AppleVolumes.default&lt;/strong&gt;设置里写上例如&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;/mnt/WinSource/TimeMachine WinMachine allow:root rwlist:root  options:tm&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;翻到这篇：&lt;a class=&#34;link&#34; href=&#34;https://www.it610.com/article/1297957643536637952.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;[NAS之旅]-基于Centos7搭建Netatalk为Windows增加AFP协议&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;才忽然醒悟，&lt;strong&gt;root用户是禁止登录AFP服务&lt;/strong&gt;的，得嘞，新开个专门的用户吧&lt;/p&gt;
&lt;p&gt;提到了新建一个用户来跑timemachine：&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/d9b180f6d397&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何自己搭建一个Time Machine服务器&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一开始习惯将硬盘挂载到&lt;code&gt;/root/WinSource&lt;/code&gt;，然鹅这似乎导致即便mac上TimeMachine连接上了也报错没法开始备份，想想也是wintm用户没有权限进root。。总结为避免不必要的麻烦以后硬盘不挂&lt;code&gt;/root&lt;/code&gt;里，这里我挂进了&lt;code&gt;/mnt&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ps:当时还试图对&lt;code&gt;/root/WinSource&lt;/code&gt;使用chown&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo chown -R wintm:wintm /root/WinSource
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;见这篇：&lt;a class=&#34;link&#34; href=&#34;https://aaron67.cc/2017/01/14/rpi-as-time-capsule/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;用树莓派实现 Time Capsule&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;无解，chown改不了&lt;code&gt;WinSource&lt;/code&gt;目录的所有者，root强而有力，认输&lt;/p&gt;
&lt;h2 id=&#34;补充连接&#34;&gt;补充连接
&lt;/h2&gt;&lt;p&gt;NetaTalk官方文档和下载：&lt;a class=&#34;link&#34; href=&#34;http://netatalk.sourceforge.net/3.1/htmldocs/afp.conf.5.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://netatalk.sourceforge.net/3.1/htmldocs/afp.conf.5.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://openwrt.org/zh/docs/guide-user/services/nas/netatalk_configuration#afp_netatalk_%e5%88%86%e4%ba%ab%e9%85%8d%e7%bd%ae_%e5%8f%88%e5%90%8d_apple_time_machine&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;AFP Netatalk 分享配置 (又名 Apple Time Machine).&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.maxisvest.com/%e4%bd%bf%e7%94%a8netatalk%e6%89%93%e9%80%a0%e4%b8%80%e6%ac%be%e5%b1%9e%e4%ba%8e%e8%87%aa%e5%b7%b1%e7%9a%84Time-Machine%e5%9c%a8%e7%ba%bf%e5%a4%87%e4%bb%bd%e6%9c%8d%e5%8a%a1%e5%99%a8/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;使用netatalk打造一款属于自己的Time-Machine在线备份服务器&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
